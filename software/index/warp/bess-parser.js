/* Jison generated parser */
var bessParser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"grammar":3,"declarations":4,"EOF":5,"declarationOptional":6,"declaration":7,"IDENT":8,"bessAfterIdent":9,"FUNCTION":10,"bessAssocOrFunc":11,"bessFunctionCall":12,"/":13,"W":14,"selectorsGroup":15,"{":16,"cssBody":17,"}":18,"bessHiddenRule":19,"#":20,":":21,"bessAssign":22,"bessBody":23,"bessArgumentsOptional":24,")":25,"bessFuncValueOrCss":26,"plainCssExprArgs":27,"cssExpr":28,";":29,"bessArguments":30,"bessArgument":31,"bessArgumentMore":32,",":33,"$":34,"bessVariable":35,"bessNamespaceIdent":36,"bessNamespaceResolver":37,".":38,"@":39,"bessFunctionNamespace":40,"cssExprOptional":41,"bessFunctionNamespaceResolver":42,"bessFunctionNamespaceResolverOptional":43,"bessArithmetic":44,"(":45,"bessArithmeticTermOptional":46,"bessArithmeticTerm":47,"cssTerm":48,"bessArithmeticOperation":49,"bessArithmeticOperator":50,"-":51,"+":52,"*":53,"%":54,"^":55,"|":56,"&":57,"selector":58,"selectorsGroupMoreOptional":59,"COMMA":60,"selectorOptional":61,"selectorSimple":62,"selectorMoreOptional":63,"selectorCombinator":64,"S":65,">":66,"selectorVariable":67,"selectorSimpleSpecManyOptional":68,"selectorSimpleSpecMany":69,"selectorSimpleSpec":70,"selectorId":71,"selectorClass":72,"selectorAttrib":73,"selectorPseudo":74,"selectorNamespacePrefixOptional":75,"`":76,"selectorNamePrefixWithElement":77,"selectorNamePrevWasNS":78,"[":79,"selectorAttribSpecOptional":80,"]":81,"selectorAttribMatch":82,"selectorAttribTarget":83,"PREFIXMATCH":84,"SUFFIXMATCH":85,"SUBSTRINGMATCH":86,"=":87,"INCLUDES":88,"DASHMATCH":89,"STRING":90,"selectorPseudoOptions":91,"plainCssExpr":92,"plainCssExprArgsMore":93,"plainCssTerm":94,"plainCssExprMore":95,"cssUnaryOperator":96,"cssUnit":97,"cssValue":98,"cssOperator":99,"cssDeclaration":100,"cssAfterIdent":101,"cssDeclarationMore":102,"cssPriority":103,"IMPORTANT_SYM":104,"cssExprMore":105,"JAVASCRIPT":106,"NUMBER":107,"PERCENTAGE":108,"LENGTH":109,"EMS":110,"EXS":111,"ANGLE":112,"TIME":113,"FREQ":114,"cssFunction":115,"HASH":116,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",8:"IDENT",10:"FUNCTION",13:"/",16:"{",18:"}",20:"#",21:":",25:")",29:";",33:",",34:"$",38:".",39:"@",45:"(",51:"-",52:"+",53:"*",54:"%",55:"^",56:"|",57:"&",60:"COMMA",65:"S",66:">",76:"`",79:"[",81:"]",84:"PREFIXMATCH",85:"SUFFIXMATCH",86:"SUBSTRINGMATCH",87:"=",88:"INCLUDES",89:"DASHMATCH",90:"STRING",104:"IMPORTANT_SYM",106:"JAVASCRIPT",107:"NUMBER",108:"PERCENTAGE",109:"LENGTH",110:"EMS",111:"EXS",112:"ANGLE",113:"TIME",114:"FREQ",116:"HASH"},
productions_: [0,[3,2],[4,1],[6,1],[6,0],[7,3],[7,3],[7,8],[7,2],[19,7],[9,2],[9,6],[9,3],[11,3],[11,4],[26,3],[26,2],[22,2],[23,1],[24,1],[24,0],[30,2],[32,2],[32,0],[31,2],[35,2],[36,3],[37,3],[37,0],[12,5],[40,1],[40,2],[42,3],[43,1],[43,0],[44,3],[46,1],[46,0],[47,2],[49,2],[49,0],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[50,1],[15,2],[59,3],[59,0],[61,1],[61,0],[58,2],[63,2],[63,2],[63,0],[64,2],[64,2],[62,2],[62,1],[68,1],[68,0],[69,2],[70,1],[70,1],[70,1],[70,1],[75,1],[75,0],[72,2],[71,2],[67,1],[67,1],[67,3],[77,3],[77,1],[77,3],[78,1],[78,1],[78,3],[78,0],[73,5],[80,4],[80,0],[82,1],[82,1],[82,1],[82,1],[82,1],[82,1],[83,1],[83,1],[83,1],[83,3],[74,2],[91,1],[91,5],[27,2],[93,3],[93,0],[92,3],[95,1],[95,0],[94,2],[94,1],[94,1],[99,2],[99,2],[99,2],[99,2],[99,1],[96,1],[17,2],[14,1],[14,0],[100,3],[100,4],[101,6],[101,8],[102,1],[102,0],[103,2],[41,1],[41,0],[28,2],[105,2],[105,1],[105,1],[105,0],[48,2],[48,1],[48,1],[48,1],[48,1],[48,1],[48,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[97,1],[98,1],[98,1],[98,1],[115,4]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1:
			var scopeRoot = {};
			var cssSheet = [];
			var jsol = {};
			scopeRoot['^'] = false;
			var decls = $$[$0-1];
			for(var i=decls.length-1; i>=0; i--) {
				expandDeclaration( decls[i], scopeRoot, jsol, cssSheet );
			}

			return {
				css: cssSheet.join('\n'),
				js: JSOL.stringify(jsol, null, '\t'),
			};
		
break;
case 4:
			this.$ = [];
		
break;
case 5:
			this.$ = $$[$0];
			this.$.push(
				__($$[$0-1], {
					varName: $$[$0-2],
				})
			);
			// console.log(this.$);
		
break;
case 6:
			this.$ = $$[$0];
			this.$.push(
				__($$[$0-1], {
					varName: $$[$0-2].substr(0,$$[$0-2].length-1),
				})
			);
		
break;
case 7:
			this.$ = $$[$0];
			this.$.push(
				__($$[$0-7], {
					isDictionaryCall: true,
					selectors: $$[$0-4],
					css: $$[$0-2],
				})
			);
		
break;
case 8:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 9:
			this.$ = {
				isRule: true,
				selectors: $$[$0-3],
				css: $$[$0-1],
				isTransparent: true,
			};
		
break;
case 10:
			this.$ = __($$[$0], {
				isAssignment: true,
			});
		
break;
case 11:
			this.$ = {
				isRule: true,
				selectors: $$[$0-3],
				css: $$[$0-1],
			};
		
break;
case 12:
			this.$ = {
				body: $$[$0-1],
			};
		
break;
case 13:
			this.$ = __($$[$0], {
				arguments: $$[$0-2],
			});
		
break;
case 14:
			this.$ = {
				isDictionary: true,
				arguments: $$[$0-3],
				bess: $$[$0],
			};
		
break;
case 15:
			this.$ = __($$[$0-1], {
				isFunction: true,
			});
		
break;
case 16:
			this.$ = __($$[$0], {
				isValueFunction: true,
			});
		
break;
case 17:
			this.$ = {
				gets: $$[$0-1],
			};
		
break;
case 20:
			this.$ = false;
		
break;
case 21:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 22:
			this.$ = $$[$0];
		
break;
case 23:
			this.$ = [];
		
break;
case 24:
			this.$ = '$' + $$[$0];
		
break;
case 25:
			this.$ = {
				isVar: true,
				varName: [ $$[$0] ],
			};
		
break;
case 26:
			this.$ = $$[$0];

			this.$.push($$[$0-1]);
			this.$ = {
				isVar: true,
				varName: this.$,
			};
	 	
break;
case 27:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 28:
			this.$ = [];
		
break;
case 29:
			this.$ = {
				isBessCall: true,
				method: $$[$0-3],
				args: $$[$0-1],
			};
		
break;
case 30:
			this.$ = [ $$[$0].substr(0, $$[$0].length-1) ];
		
break;
case 31:
			this.$ = $$[$0-1];
			this.$.unshift($$[$0].substr(0, $$[$0].length-1));
		
break;
case 32:
			this.$ = $$[$0];
			this.$.push($$[$0-2]);
		
break;
case 34:
			this.$ = [];
		
break;
case 35:
			this.$ = {
				isArithmetic: true,
				term: $$[$0-1],
			};
		
break;
case 37:
			this.$ = {};
		
break;
case 38:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 39:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 40:
			this.$ = [];
		
break;
case 49:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 50:
			this.$ = $$[$0];
		
break;
case 51:
			this.$ = [];
		
break;
case 54:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 55:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 56:
			this.$ = $$[$0];
			if(this.$) {
				this.$.push(' ');
			}
			else {
				this.$ = [];
			}
		
break;
case 57:
			this.$ = [];
		
break;
case 60:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 61:
			this.$ = $$[$0];
		
break;
case 63:
			this.$ = [];
		
break;
case 64:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 71:
			this.$ = {
				isClassPrefix: true,
				value: $$[$0],
			};
		
break;
case 72:
			this.$ = {
				isIdPrefix: true,
				value: $$[$0],
			};
		
break;
case 75:
			this.$ = $$[$0-1];
		
break;
case 76:
			this.$ = $$[$0];
			if(this.$) {
				this.$ = {
					ns: $$[$0-2],
					nv: this.$,
				};
			}
			else {
				this.$ = {
					nv: $$[$0-2],
				};
			}
		
break;
case 77:
			this.$ = {
				nv: $$[$0],
			};
		
break;
case 82:
			this.$ = false;
		
break;
case 83:
			this.$ = __($$[$0-1], {
				of: $$[$0-2],
			});
		
break;
case 84:
			this.$ = {
				op: $$[$0-3],
				to: $$[$0-1],
			};
		
break;
case 93:
			this.$ = strip($$[$0]);
		
break;
case 96:
			this.$ = {
				isPseudo: true,
				value: $$[$0],
			};
		
break;
case 98:
			this.$ = {
				isCall: true,
				arg: $$[$0-2],
			};
		
break;
case 99:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 100:
			this.$ = [ plainCssExpr ];
		
break;
case 101:
			this.$ = [];
		
break;
case 102:
			this.$ = $$[$0];
			this.$.push($$[$0-2]);
		
break;
case 104:
			this.$ = [];
		
break;
case 105:
			this.$ = $$[$0-1] + $$[$0];
		
break;
case 107:
			this.$ = $$[$0];
		
break;
case 114:
			this.$ = $$[$0];
		
break;
case 117:
			this.$ = $$[$0];
			this.$[this.$.length-1].prop = $$[$0-2];
		
break;
case 118:
			this.$ = $$[$0];
			this.$.push($$[$0-3]);
		
break;
case 119:
			this.$ = $$[$0];
			this.$.push({
				value: $$[$0-3],
			});
		
break;
case 120:
			this.$ = $$[$0];
			this.$.push({
				isRuleExpansion: true,
				selectors: $$[$0-5],
				css: $$[$0-3],
			});
		
break;
case 122:
			this.$ = [];
		
break;
case 125:
			this.$ = false;
		
break;
case 126:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 127:
			this.$ = $$[$0];
			var term = this.$.pop();
			this.$.push(term);
			if($$[$0-1] != ' ') {
				this.$.push($$[$0-1]);
			}
		
break;
case 130:
			this.$ = [];
		
break;
case 131:
			this.$ = $$[$0-1] + $$[$0];
		
break;
case 147:
			this.$ = {
				isStr: true,
				value: strip($$[$0]),
			};
		
break;
case 150:
			this.$ = {
				isCall: true,
				method: $$[$0-3],
				args: $$[$0-1],
			};
		
break;
}
},
table: [{3:1,4:2,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,19:8,20:[1,10],39:[1,9]},{1:[3]},{5:[1,11]},{5:[2,2],18:[2,2]},{5:[2,3],18:[2,3]},{9:12,13:[1,14],16:[1,15],21:[1,13]},{8:[1,38],10:[1,40],11:16,24:17,25:[2,20],27:18,30:19,31:21,34:[1,23],51:[1,27],90:[1,37],92:20,94:22,96:24,97:25,98:26,107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{13:[1,41]},{4:42,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,18:[2,4],19:8,20:[1,10],39:[1,9]},{8:[1,46],10:[1,44],40:43,42:45},{13:[1,47]},{1:[2,1]},{4:48,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,18:[2,4],19:8,20:[1,10],39:[1,9]},{8:[1,38],10:[1,40],12:56,22:49,28:50,34:[1,59],36:55,39:[1,9],44:58,45:[1,60],48:51,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{8:[2,116],14:61,20:[2,116],21:[2,116],34:[2,116],38:[2,116],65:[1,62],76:[2,116],79:[2,116]},{7:64,8:[1,5],10:[1,6],12:7,19:8,20:[1,10],23:63,39:[1,9]},{4:65,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,18:[2,4],19:8,20:[1,10],39:[1,9]},{25:[1,66]},{25:[1,67]},{25:[2,19]},{25:[2,101],33:[1,69],93:68},{25:[2,23],32:70,33:[1,71]},{8:[2,116],10:[2,116],14:72,25:[2,116],33:[2,116],51:[2,116],65:[1,62],90:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{8:[1,73]},{10:[1,40],97:74,107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36},{8:[2,106],10:[2,106],25:[2,106],33:[2,106],51:[2,106],65:[2,106],90:[2,106],107:[2,106],108:[2,106],109:[2,106],110:[2,106],111:[2,106],112:[2,106],113:[2,106],114:[2,106],116:[2,106]},{8:[2,107],10:[2,107],25:[2,107],33:[2,107],51:[2,107],65:[2,107],90:[2,107],107:[2,107],108:[2,107],109:[2,107],110:[2,107],111:[2,107],112:[2,107],113:[2,107],114:[2,107],116:[2,107]},{10:[2,113],107:[2,113],108:[2,113],109:[2,113],110:[2,113],111:[2,113],112:[2,113],113:[2,113],114:[2,113]},{8:[2,138],10:[2,138],13:[2,138],25:[2,138],29:[2,138],33:[2,138],34:[2,138],39:[2,138],45:[2,138],51:[2,138],52:[2,138],53:[2,138],54:[2,138],55:[2,138],56:[2,138],57:[2,138],65:[2,138],90:[2,138],104:[2,138],106:[2,138],107:[2,138],108:[2,138],109:[2,138],110:[2,138],111:[2,138],112:[2,138],113:[2,138],114:[2,138],116:[2,138]},{8:[2,139],10:[2,139],13:[2,139],25:[2,139],29:[2,139],33:[2,139],34:[2,139],39:[2,139],45:[2,139],51:[2,139],52:[2,139],53:[2,139],54:[2,139],55:[2,139],56:[2,139],57:[2,139],65:[2,139],90:[2,139],104:[2,139],106:[2,139],107:[2,139],108:[2,139],109:[2,139],110:[2,139],111:[2,139],112:[2,139],113:[2,139],114:[2,139],116:[2,139]},{8:[2,140],10:[2,140],13:[2,140],25:[2,140],29:[2,140],33:[2,140],34:[2,140],39:[2,140],45:[2,140],51:[2,140],52:[2,140],53:[2,140],54:[2,140],55:[2,140],56:[2,140],57:[2,140],65:[2,140],90:[2,140],104:[2,140],106:[2,140],107:[2,140],108:[2,140],109:[2,140],110:[2,140],111:[2,140],112:[2,140],113:[2,140],114:[2,140],116:[2,140]},{8:[2,141],10:[2,141],13:[2,141],25:[2,141],29:[2,141],33:[2,141],34:[2,141],39:[2,141],45:[2,141],51:[2,141],52:[2,141],53:[2,141],54:[2,141],55:[2,141],56:[2,141],57:[2,141],65:[2,141],90:[2,141],104:[2,141],106:[2,141],107:[2,141],108:[2,141],109:[2,141],110:[2,141],111:[2,141],112:[2,141],113:[2,141],114:[2,141],116:[2,141]},{8:[2,142],10:[2,142],13:[2,142],25:[2,142],29:[2,142],33:[2,142],34:[2,142],39:[2,142],45:[2,142],51:[2,142],52:[2,142],53:[2,142],54:[2,142],55:[2,142],56:[2,142],57:[2,142],65:[2,142],90:[2,142],104:[2,142],106:[2,142],107:[2,142],108:[2,142],109:[2,142],110:[2,142],111:[2,142],112:[2,142],113:[2,142],114:[2,142],116:[2,142]},{8:[2,143],10:[2,143],13:[2,143],25:[2,143],29:[2,143],33:[2,143],34:[2,143],39:[2,143],45:[2,143],51:[2,143],52:[2,143],53:[2,143],54:[2,143],55:[2,143],56:[2,143],57:[2,143],65:[2,143],90:[2,143],104:[2,143],106:[2,143],107:[2,143],108:[2,143],109:[2,143],110:[2,143],111:[2,143],112:[2,143],113:[2,143],114:[2,143],116:[2,143]},{8:[2,144],10:[2,144],13:[2,144],25:[2,144],29:[2,144],33:[2,144],34:[2,144],39:[2,144],45:[2,144],51:[2,144],52:[2,144],53:[2,144],54:[2,144],55:[2,144],56:[2,144],57:[2,144],65:[2,144],90:[2,144],104:[2,144],106:[2,144],107:[2,144],108:[2,144],109:[2,144],110:[2,144],111:[2,144],112:[2,144],113:[2,144],114:[2,144],116:[2,144]},{8:[2,145],10:[2,145],13:[2,145],25:[2,145],29:[2,145],33:[2,145],34:[2,145],39:[2,145],45:[2,145],51:[2,145],52:[2,145],53:[2,145],54:[2,145],55:[2,145],56:[2,145],57:[2,145],65:[2,145],90:[2,145],104:[2,145],106:[2,145],107:[2,145],108:[2,145],109:[2,145],110:[2,145],111:[2,145],112:[2,145],113:[2,145],114:[2,145],116:[2,145]},{8:[2,146],10:[2,146],13:[2,146],25:[2,146],29:[2,146],33:[2,146],34:[2,146],39:[2,146],45:[2,146],51:[2,146],52:[2,146],53:[2,146],54:[2,146],55:[2,146],56:[2,146],57:[2,146],65:[2,146],90:[2,146],104:[2,146],106:[2,146],107:[2,146],108:[2,146],109:[2,146],110:[2,146],111:[2,146],112:[2,146],113:[2,146],114:[2,146],116:[2,146]},{8:[2,147],10:[2,147],13:[2,147],25:[2,147],29:[2,147],33:[2,147],34:[2,147],39:[2,147],45:[2,147],51:[2,147],52:[2,147],53:[2,147],54:[2,147],55:[2,147],56:[2,147],57:[2,147],65:[2,147],90:[2,147],104:[2,147],106:[2,147],107:[2,147],108:[2,147],109:[2,147],110:[2,147],111:[2,147],112:[2,147],113:[2,147],114:[2,147],116:[2,147]},{8:[2,148],10:[2,148],13:[2,148],25:[2,148],29:[2,148],33:[2,148],34:[2,148],39:[2,148],45:[2,148],51:[2,148],52:[2,148],53:[2,148],54:[2,148],55:[2,148],56:[2,148],57:[2,148],65:[2,148],90:[2,148],104:[2,148],106:[2,148],107:[2,148],108:[2,148],109:[2,148],110:[2,148],111:[2,148],112:[2,148],113:[2,148],114:[2,148],116:[2,148]},{8:[2,149],10:[2,149],13:[2,149],25:[2,149],29:[2,149],33:[2,149],34:[2,149],39:[2,149],45:[2,149],51:[2,149],52:[2,149],53:[2,149],54:[2,149],55:[2,149],56:[2,149],57:[2,149],65:[2,149],90:[2,149],104:[2,149],106:[2,149],107:[2,149],108:[2,149],109:[2,149],110:[2,149],111:[2,149],112:[2,149],113:[2,149],114:[2,149],116:[2,149]},{8:[2,116],10:[2,116],14:75,34:[2,116],39:[2,116],45:[2,116],51:[2,116],65:[1,62],90:[2,116],106:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{8:[2,116],14:76,20:[2,116],21:[2,116],34:[2,116],38:[2,116],65:[1,62],76:[2,116],79:[2,116]},{5:[2,8],18:[2,8]},{8:[2,116],10:[2,116],14:77,25:[2,116],34:[2,116],39:[2,116],45:[2,116],51:[2,116],65:[1,62],90:[2,116],106:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{8:[2,30],10:[2,30],25:[2,30],34:[2,30],39:[2,30],45:[2,30],51:[2,30],65:[2,30],90:[2,30],106:[2,30],107:[2,30],108:[2,30],109:[2,30],110:[2,30],111:[2,30],112:[2,30],113:[2,30],114:[2,30],116:[2,30]},{10:[1,78]},{38:[1,79]},{8:[2,116],14:80,20:[2,116],21:[2,116],34:[2,116],38:[2,116],65:[1,62],76:[2,116],79:[2,116]},{5:[2,5],18:[2,5]},{5:[2,10],8:[2,10],10:[2,10],18:[2,10],20:[2,10],39:[2,10]},{29:[1,81]},{8:[1,38],10:[1,40],12:56,13:[1,86],25:[2,130],28:84,29:[2,130],33:[1,87],34:[1,59],36:55,39:[1,9],44:58,45:[1,60],48:51,51:[1,27],52:[1,89],53:[1,88],65:[1,90],90:[1,37],96:52,97:53,98:54,99:83,103:85,104:[1,91],105:82,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{10:[1,40],97:92,107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36},{8:[2,132],10:[2,132],13:[2,132],25:[2,132],29:[2,132],33:[2,132],34:[2,132],39:[2,132],45:[2,132],51:[2,132],52:[2,132],53:[2,132],54:[2,132],55:[2,132],56:[2,132],57:[2,132],65:[2,132],90:[2,132],104:[2,132],106:[2,132],107:[2,132],108:[2,132],109:[2,132],110:[2,132],111:[2,132],112:[2,132],113:[2,132],114:[2,132],116:[2,132]},{8:[2,133],10:[2,133],13:[2,133],25:[2,133],29:[2,133],33:[2,133],34:[2,133],39:[2,133],45:[2,133],51:[2,133],52:[2,133],53:[2,133],54:[2,133],55:[2,133],56:[2,133],57:[2,133],65:[2,133],90:[2,133],104:[2,133],106:[2,133],107:[2,133],108:[2,133],109:[2,133],110:[2,133],111:[2,133],112:[2,133],113:[2,133],114:[2,133],116:[2,133]},{8:[2,134],10:[2,134],13:[2,134],25:[2,134],29:[2,134],33:[2,134],34:[2,134],39:[2,134],45:[2,134],51:[2,134],52:[2,134],53:[2,134],54:[2,134],55:[2,134],56:[2,134],57:[2,134],65:[2,134],90:[2,134],104:[2,134],106:[2,134],107:[2,134],108:[2,134],109:[2,134],110:[2,134],111:[2,134],112:[2,134],113:[2,134],114:[2,134],116:[2,134]},{8:[2,135],10:[2,135],13:[2,135],25:[2,135],29:[2,135],33:[2,135],34:[2,135],39:[2,135],45:[2,135],51:[2,135],52:[2,135],53:[2,135],54:[2,135],55:[2,135],56:[2,135],57:[2,135],65:[2,135],90:[2,135],104:[2,135],106:[2,135],107:[2,135],108:[2,135],109:[2,135],110:[2,135],111:[2,135],112:[2,135],113:[2,135],114:[2,135],116:[2,135]},{8:[2,136],10:[2,136],13:[2,136],25:[2,136],29:[2,136],33:[2,136],34:[2,136],39:[2,136],45:[2,136],51:[2,136],52:[2,136],53:[2,136],54:[2,136],55:[2,136],56:[2,136],57:[2,136],65:[2,136],90:[2,136],104:[2,136],106:[2,136],107:[2,136],108:[2,136],109:[2,136],110:[2,136],111:[2,136],112:[2,136],113:[2,136],114:[2,136],116:[2,136]},{8:[2,137],10:[2,137],13:[2,137],25:[2,137],29:[2,137],33:[2,137],34:[2,137],39:[2,137],45:[2,137],51:[2,137],52:[2,137],53:[2,137],54:[2,137],55:[2,137],56:[2,137],57:[2,137],65:[2,137],90:[2,137],104:[2,137],106:[2,137],107:[2,137],108:[2,137],109:[2,137],110:[2,137],111:[2,137],112:[2,137],113:[2,137],114:[2,137],116:[2,137]},{8:[1,93]},{8:[1,38],10:[1,40],12:56,25:[2,37],34:[1,59],36:55,39:[1,9],44:58,45:[1,60],46:94,47:95,48:96,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{8:[1,102],15:97,20:[1,111],21:[1,114],34:[1,106],35:103,38:[1,112],58:98,62:99,67:100,69:101,70:105,71:107,72:108,73:109,74:110,76:[1,104],79:[1,113]},{8:[2,115],10:[2,115],13:[2,115],18:[2,115],20:[2,115],21:[2,115],25:[2,115],29:[2,115],33:[2,115],34:[2,115],38:[2,115],39:[2,115],45:[2,115],51:[2,115],76:[2,115],79:[2,115],81:[2,115],84:[2,115],85:[2,115],86:[2,115],87:[2,115],88:[2,115],89:[2,115],90:[2,115],106:[2,115],107:[2,115],108:[2,115],109:[2,115],110:[2,115],111:[2,115],112:[2,115],113:[2,115],114:[2,115],116:[2,115]},{18:[1,115]},{18:[2,18]},{5:[2,6],18:[2,6]},{16:[1,117],21:[1,118],26:116},{21:[1,119]},{25:[2,99]},{8:[2,116],10:[2,116],14:120,51:[2,116],65:[1,62],90:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{25:[2,21]},{30:121,31:21,34:[1,23]},{8:[1,38],10:[1,40],25:[2,104],33:[2,104],51:[1,27],90:[1,37],92:123,94:22,95:122,96:24,97:25,98:26,107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{25:[2,24],33:[2,24]},{8:[2,105],10:[2,105],25:[2,105],33:[2,105],51:[2,105],65:[2,105],90:[2,105],107:[2,105],108:[2,105],109:[2,105],110:[2,105],111:[2,105],112:[2,105],113:[2,105],114:[2,105],116:[2,105]},{8:[1,38],10:[1,40],12:56,28:124,34:[1,59],36:55,39:[1,9],44:58,45:[1,60],48:51,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{8:[1,102],15:125,20:[1,111],21:[1,114],34:[1,106],35:103,38:[1,112],58:98,62:99,67:100,69:101,70:105,71:107,72:108,73:109,74:110,76:[1,104],79:[1,113]},{8:[1,38],10:[1,40],12:56,25:[2,125],28:127,34:[1,59],36:55,39:[1,9],41:126,44:58,45:[1,60],48:51,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{8:[2,31],10:[2,31],25:[2,31],34:[2,31],39:[2,31],45:[2,31],51:[2,31],65:[2,31],90:[2,31],106:[2,31],107:[2,31],108:[2,31],109:[2,31],110:[2,31],111:[2,31],112:[2,31],113:[2,31],114:[2,31],116:[2,31]},{8:[1,46],10:[2,34],42:129,43:128},{8:[1,102],15:130,20:[1,111],21:[1,114],34:[1,106],35:103,38:[1,112],58:98,62:99,67:100,69:101,70:105,71:107,72:108,73:109,74:110,76:[1,104],79:[1,113]},{5:[2,17],8:[2,17],10:[2,17],18:[2,17],20:[2,17],39:[2,17]},{25:[2,126],29:[2,126]},{8:[1,38],10:[1,40],12:56,28:131,34:[1,59],36:55,39:[1,9],44:58,45:[1,60],48:51,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{25:[2,128],29:[2,128]},{25:[2,129],29:[2,129]},{8:[2,116],10:[2,116],14:132,34:[2,116],39:[2,116],45:[2,116],51:[2,116],65:[1,62],90:[2,116],106:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{8:[2,116],10:[2,116],14:133,34:[2,116],39:[2,116],45:[2,116],51:[2,116],65:[1,62],90:[2,116],106:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{8:[2,116],10:[2,116],14:134,34:[2,116],39:[2,116],45:[2,116],51:[2,116],65:[1,62],90:[2,116],106:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{8:[2,116],10:[2,116],14:135,34:[2,116],39:[2,116],45:[2,116],51:[2,116],65:[1,62],90:[2,116],106:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{8:[2,112],10:[2,112],34:[2,112],39:[2,112],45:[2,112],51:[2,112],90:[2,112],106:[2,112],107:[2,112],108:[2,112],109:[2,112],110:[2,112],111:[2,112],112:[2,112],113:[2,112],114:[2,112],116:[2,112]},{14:136,25:[2,116],29:[2,116],65:[1,62]},{8:[2,131],10:[2,131],13:[2,131],25:[2,131],29:[2,131],33:[2,131],34:[2,131],39:[2,131],45:[2,131],51:[2,131],52:[2,131],53:[2,131],54:[2,131],55:[2,131],56:[2,131],57:[2,131],65:[2,131],90:[2,131],104:[2,131],106:[2,131],107:[2,131],108:[2,131],109:[2,131],110:[2,131],111:[2,131],112:[2,131],113:[2,131],114:[2,131],116:[2,131]},{8:[2,28],10:[2,28],13:[2,28],25:[2,28],29:[2,28],33:[2,28],34:[2,28],37:137,38:[1,138],39:[2,28],45:[2,28],51:[2,28],52:[2,28],53:[2,28],54:[2,28],55:[2,28],56:[2,28],57:[2,28],65:[2,28],76:[2,28],90:[2,28],104:[2,28],106:[2,28],107:[2,28],108:[2,28],109:[2,28],110:[2,28],111:[2,28],112:[2,28],113:[2,28],114:[2,28],116:[2,28]},{25:[1,139]},{25:[2,36]},{13:[1,145],25:[2,40],49:140,50:141,51:[1,142],52:[1,143],53:[1,144],54:[1,146],55:[1,147],56:[1,148],57:[1,149]},{16:[1,150]},{16:[2,51],59:151,60:[1,152]},{16:[2,57],52:[1,156],60:[2,57],63:153,64:154,65:[1,155],66:[1,157]},{16:[2,63],20:[1,111],21:[1,114],38:[1,112],52:[2,63],60:[2,63],65:[2,63],66:[2,63],68:158,69:159,70:105,71:107,72:108,73:109,74:110,79:[1,113]},{16:[2,61],52:[2,61],60:[2,61],65:[2,61],66:[2,61]},{16:[2,73],20:[2,73],21:[2,73],38:[2,73],52:[2,73],60:[2,73],65:[2,73],66:[2,73],79:[2,73]},{16:[2,74],20:[2,74],21:[2,74],38:[2,74],52:[2,74],60:[2,74],65:[2,74],66:[2,74],79:[2,74]},{34:[1,59],36:160},{16:[2,63],20:[1,111],21:[1,114],38:[1,112],52:[2,63],60:[2,63],65:[2,63],66:[2,63],68:161,69:159,70:105,71:107,72:108,73:109,74:110,79:[1,113]},{8:[1,162]},{16:[2,65],20:[2,65],21:[2,65],38:[2,65],52:[2,65],60:[2,65],65:[2,65],66:[2,65],79:[2,65]},{16:[2,66],20:[2,66],21:[2,66],38:[2,66],52:[2,66],60:[2,66],65:[2,66],66:[2,66],79:[2,66]},{16:[2,67],20:[2,67],21:[2,67],38:[2,67],52:[2,67],60:[2,67],65:[2,67],66:[2,67],79:[2,67]},{16:[2,68],20:[2,68],21:[2,68],38:[2,68],52:[2,68],60:[2,68],65:[2,68],66:[2,68],79:[2,68]},{8:[1,102],34:[1,106],35:103,67:163,76:[1,104]},{8:[1,102],34:[1,106],35:103,67:164,76:[1,104]},{8:[2,116],14:165,34:[2,116],65:[1,62],76:[2,116]},{8:[1,167],10:[1,168],91:166},{5:[2,12],8:[2,12],10:[2,12],18:[2,12],20:[2,12],39:[2,12]},{5:[2,13],8:[2,13],10:[2,13],18:[2,13],20:[2,13],39:[2,13]},{8:[2,116],14:170,17:169,39:[2,116],65:[1,62]},{8:[1,38],10:[1,40],12:56,22:171,28:50,34:[1,59],36:55,39:[1,9],44:58,45:[1,60],48:51,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{8:[1,38],10:[1,40],12:56,22:172,28:50,34:[1,59],36:55,39:[1,9],44:58,45:[1,60],48:51,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{8:[1,38],10:[1,40],27:173,51:[1,27],90:[1,37],92:20,94:22,96:24,97:25,98:26,107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{25:[2,22]},{25:[2,102],33:[2,102]},{25:[2,103],33:[2,103]},{25:[1,174]},{16:[1,175]},{25:[1,176]},{25:[2,124]},{10:[2,32]},{10:[2,33]},{16:[1,177]},{25:[2,127],29:[2,127]},{8:[2,108],10:[2,108],34:[2,108],39:[2,108],45:[2,108],51:[2,108],90:[2,108],106:[2,108],107:[2,108],108:[2,108],109:[2,108],110:[2,108],111:[2,108],112:[2,108],113:[2,108],114:[2,108],116:[2,108]},{8:[2,109],10:[2,109],34:[2,109],39:[2,109],45:[2,109],51:[2,109],90:[2,109],106:[2,109],107:[2,109],108:[2,109],109:[2,109],110:[2,109],111:[2,109],112:[2,109],113:[2,109],114:[2,109],116:[2,109]},{8:[2,110],10:[2,110],34:[2,110],39:[2,110],45:[2,110],51:[2,110],90:[2,110],106:[2,110],107:[2,110],108:[2,110],109:[2,110],110:[2,110],111:[2,110],112:[2,110],113:[2,110],114:[2,110],116:[2,110]},{8:[2,111],10:[2,111],34:[2,111],39:[2,111],45:[2,111],51:[2,111],90:[2,111],106:[2,111],107:[2,111],108:[2,111],109:[2,111],110:[2,111],111:[2,111],112:[2,111],113:[2,111],114:[2,111],116:[2,111]},{25:[2,123],29:[2,123]},{8:[2,26],10:[2,26],13:[2,26],25:[2,26],29:[2,26],33:[2,26],34:[2,26],39:[2,26],45:[2,26],51:[2,26],52:[2,26],53:[2,26],54:[2,26],55:[2,26],56:[2,26],57:[2,26],65:[2,26],76:[2,26],90:[2,26],104:[2,26],106:[2,26],107:[2,26],108:[2,26],109:[2,26],110:[2,26],111:[2,26],112:[2,26],113:[2,26],114:[2,26],116:[2,26]},{8:[1,178]},{8:[2,35],10:[2,35],13:[2,35],25:[2,35],29:[2,35],33:[2,35],34:[2,35],39:[2,35],45:[2,35],51:[2,35],52:[2,35],53:[2,35],54:[2,35],55:[2,35],56:[2,35],57:[2,35],65:[2,35],90:[2,35],104:[2,35],106:[2,35],107:[2,35],108:[2,35],109:[2,35],110:[2,35],111:[2,35],112:[2,35],113:[2,35],114:[2,35],116:[2,35]},{25:[2,38]},{8:[1,38],10:[1,40],12:56,34:[1,59],36:55,39:[1,9],44:58,45:[1,60],47:179,48:96,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{8:[2,41],10:[2,41],34:[2,41],39:[2,41],45:[2,41],51:[2,41],90:[2,41],106:[2,41],107:[2,41],108:[2,41],109:[2,41],110:[2,41],111:[2,41],112:[2,41],113:[2,41],114:[2,41],116:[2,41]},{8:[2,42],10:[2,42],34:[2,42],39:[2,42],45:[2,42],51:[2,42],90:[2,42],106:[2,42],107:[2,42],108:[2,42],109:[2,42],110:[2,42],111:[2,42],112:[2,42],113:[2,42],114:[2,42],116:[2,42]},{8:[2,43],10:[2,43],34:[2,43],39:[2,43],45:[2,43],51:[2,43],90:[2,43],106:[2,43],107:[2,43],108:[2,43],109:[2,43],110:[2,43],111:[2,43],112:[2,43],113:[2,43],114:[2,43],116:[2,43]},{8:[2,44],10:[2,44],34:[2,44],39:[2,44],45:[2,44],51:[2,44],90:[2,44],106:[2,44],107:[2,44],108:[2,44],109:[2,44],110:[2,44],111:[2,44],112:[2,44],113:[2,44],114:[2,44],116:[2,44]},{8:[2,45],10:[2,45],34:[2,45],39:[2,45],45:[2,45],51:[2,45],90:[2,45],106:[2,45],107:[2,45],108:[2,45],109:[2,45],110:[2,45],111:[2,45],112:[2,45],113:[2,45],114:[2,45],116:[2,45]},{8:[2,46],10:[2,46],34:[2,46],39:[2,46],45:[2,46],51:[2,46],90:[2,46],106:[2,46],107:[2,46],108:[2,46],109:[2,46],110:[2,46],111:[2,46],112:[2,46],113:[2,46],114:[2,46],116:[2,46]},{8:[2,47],10:[2,47],34:[2,47],39:[2,47],45:[2,47],51:[2,47],90:[2,47],106:[2,47],107:[2,47],108:[2,47],109:[2,47],110:[2,47],111:[2,47],112:[2,47],113:[2,47],114:[2,47],116:[2,47]},{8:[2,48],10:[2,48],34:[2,48],39:[2,48],45:[2,48],51:[2,48],90:[2,48],106:[2,48],107:[2,48],108:[2,48],109:[2,48],110:[2,48],111:[2,48],112:[2,48],113:[2,48],114:[2,48],116:[2,48]},{8:[2,116],14:170,17:180,39:[2,116],65:[1,62]},{16:[2,49]},{8:[2,116],14:181,20:[2,116],21:[2,116],34:[2,116],38:[2,116],65:[1,62],76:[2,116],79:[2,116]},{16:[2,54],60:[2,54]},{8:[1,102],20:[1,111],21:[1,114],34:[1,106],35:103,38:[1,112],58:182,62:99,67:100,69:101,70:105,71:107,72:108,73:109,74:110,76:[1,104],79:[1,113]},{8:[1,102],16:[2,53],20:[1,111],21:[1,114],34:[1,106],35:103,38:[1,112],58:184,60:[2,53],61:183,62:99,67:100,69:101,70:105,71:107,72:108,73:109,74:110,76:[1,104],79:[1,113]},{8:[2,116],14:185,20:[2,116],21:[2,116],34:[2,116],38:[2,116],65:[1,62],76:[2,116],79:[2,116]},{8:[2,116],14:186,20:[2,116],21:[2,116],34:[2,116],38:[2,116],65:[1,62],76:[2,116],79:[2,116]},{16:[2,60],52:[2,60],60:[2,60],65:[2,60],66:[2,60]},{16:[2,62],52:[2,62],60:[2,62],65:[2,62],66:[2,62]},{76:[1,187]},{16:[2,64],52:[2,64],60:[2,64],65:[2,64],66:[2,64]},{16:[2,25],20:[2,25],21:[2,25],38:[2,25],52:[2,25],60:[2,25],65:[2,25],66:[2,25],79:[2,25],81:[2,25],84:[2,25],85:[2,25],86:[2,25],87:[2,25],88:[2,25],89:[2,25]},{16:[2,72],20:[2,72],21:[2,72],38:[2,72],52:[2,72],60:[2,72],65:[2,72],66:[2,72],79:[2,72]},{16:[2,71],20:[2,71],21:[2,71],38:[2,71],52:[2,71],60:[2,71],65:[2,71],66:[2,71],79:[2,71]},{8:[1,189],34:[1,106],35:190,76:[1,191],77:188},{16:[2,96],20:[2,96],21:[2,96],38:[2,96],52:[2,96],60:[2,96],65:[2,96],66:[2,96],79:[2,96]},{16:[2,97],20:[2,97],21:[2,97],38:[2,97],52:[2,97],60:[2,97],65:[2,97],66:[2,97],79:[2,97]},{8:[2,116],14:192,65:[1,62]},{18:[1,193]},{8:[1,195],12:196,39:[1,9],100:194},{5:[2,16],8:[2,16],10:[2,16],18:[2,16],20:[2,16],39:[2,16]},{5:[2,14],8:[2,14],10:[2,14],18:[2,14],20:[2,14],39:[2,14]},{25:[2,100]},{8:[2,150],10:[2,150],13:[2,150],25:[2,150],29:[2,150],33:[2,150],34:[2,150],39:[2,150],45:[2,150],51:[2,150],52:[2,150],53:[2,150],54:[2,150],55:[2,150],56:[2,150],57:[2,150],65:[2,150],90:[2,150],104:[2,150],106:[2,150],107:[2,150],108:[2,150],109:[2,150],110:[2,150],111:[2,150],112:[2,150],113:[2,150],114:[2,150],116:[2,150]},{8:[2,116],14:170,17:197,39:[2,116],65:[1,62]},{8:[2,29],10:[2,29],13:[2,29],25:[2,29],29:[2,29],33:[2,29],34:[2,29],39:[2,29],45:[2,29],51:[2,29],52:[2,29],53:[2,29],54:[2,29],55:[2,29],56:[2,29],57:[2,29],65:[2,29],90:[2,29],104:[2,29],106:[2,29],107:[2,29],108:[2,29],109:[2,29],110:[2,29],111:[2,29],112:[2,29],113:[2,29],114:[2,29],116:[2,29]},{8:[2,116],14:170,17:198,39:[2,116],65:[1,62]},{8:[2,28],10:[2,28],13:[2,28],25:[2,28],29:[2,28],33:[2,28],34:[2,28],37:199,38:[1,138],39:[2,28],45:[2,28],51:[2,28],52:[2,28],53:[2,28],54:[2,28],55:[2,28],56:[2,28],57:[2,28],65:[2,28],76:[2,28],90:[2,28],104:[2,28],106:[2,28],107:[2,28],108:[2,28],109:[2,28],110:[2,28],111:[2,28],112:[2,28],113:[2,28],114:[2,28],116:[2,28]},{25:[2,39]},{18:[1,200]},{8:[1,102],15:201,20:[1,111],21:[1,114],34:[1,106],35:103,38:[1,112],58:98,62:99,67:100,69:101,70:105,71:107,72:108,73:109,74:110,76:[1,104],79:[1,113]},{16:[2,55],60:[2,55]},{16:[2,56],60:[2,56]},{16:[2,52],60:[2,52]},{8:[2,58],20:[2,58],21:[2,58],34:[2,58],38:[2,58],76:[2,58],79:[2,58]},{8:[2,59],20:[2,59],21:[2,59],34:[2,59],38:[2,59],76:[2,59],79:[2,59]},{16:[2,75],20:[2,75],21:[2,75],38:[2,75],52:[2,75],60:[2,75],65:[2,75],66:[2,75],79:[2,75]},{80:202,81:[2,85],82:203,84:[1,204],85:[1,205],86:[1,206],87:[1,207],88:[1,208],89:[1,209]},{8:[2,116],14:210,34:[2,116],65:[1,62],76:[2,116],81:[2,116],84:[2,116],85:[2,116],86:[2,116],87:[2,116],88:[2,116],89:[2,116]},{81:[2,77],84:[2,77],85:[2,77],86:[2,77],87:[2,77],88:[2,77],89:[2,77]},{34:[1,59],36:211},{8:[1,212]},{5:[2,15],8:[2,15],10:[2,15],18:[2,15],20:[2,15],39:[2,15]},{18:[2,114]},{13:[2,116],14:213,21:[2,116],65:[1,62]},{29:[1,214]},{18:[1,215]},{18:[1,216]},{8:[2,27],10:[2,27],13:[2,27],25:[2,27],29:[2,27],33:[2,27],34:[2,27],39:[2,27],45:[2,27],51:[2,27],52:[2,27],53:[2,27],54:[2,27],55:[2,27],56:[2,27],57:[2,27],65:[2,27],76:[2,27],90:[2,27],104:[2,27],106:[2,27],107:[2,27],108:[2,27],109:[2,27],110:[2,27],111:[2,27],112:[2,27],113:[2,27],114:[2,27],116:[2,27]},{5:[2,11],8:[2,11],10:[2,11],18:[2,11],20:[2,11],39:[2,11]},{16:[2,50]},{81:[1,217]},{8:[2,116],14:218,34:[2,116],65:[1,62],76:[2,116],90:[2,116]},{8:[2,86],34:[2,86],65:[2,86],76:[2,86],90:[2,86]},{8:[2,87],34:[2,87],65:[2,87],76:[2,87],90:[2,87]},{8:[2,88],34:[2,88],65:[2,88],76:[2,88],90:[2,88]},{8:[2,89],34:[2,89],65:[2,89],76:[2,89],90:[2,89]},{8:[2,90],34:[2,90],65:[2,90],76:[2,90],90:[2,90]},{8:[2,91],34:[2,91],65:[2,91],76:[2,91],90:[2,91]},{8:[1,220],34:[1,106],35:221,76:[1,222],78:219,81:[2,82],84:[2,82],85:[2,82],86:[2,82],87:[2,82],88:[2,82],89:[2,82]},{76:[1,223]},{14:224,25:[2,116],65:[1,62]},{13:[1,227],21:[1,226],101:225},{8:[2,116],14:228,18:[2,116],39:[2,116],65:[1,62]},{4:229,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,18:[2,4],19:8,20:[1,10],39:[1,9]},{5:[2,9],8:[2,9],10:[2,9],18:[2,9],20:[2,9],39:[2,9]},{16:[2,83],20:[2,83],21:[2,83],38:[2,83],52:[2,83],60:[2,83],65:[2,83],66:[2,83],79:[2,83]},{8:[1,231],34:[1,106],35:233,76:[1,234],83:230,90:[1,232]},{81:[2,76],84:[2,76],85:[2,76],86:[2,76],87:[2,76],88:[2,76],89:[2,76]},{81:[2,79],84:[2,79],85:[2,79],86:[2,79],87:[2,79],88:[2,79],89:[2,79]},{81:[2,80],84:[2,80],85:[2,80],86:[2,80],87:[2,80],88:[2,80],89:[2,80]},{34:[1,59],36:235},{81:[2,78],84:[2,78],85:[2,78],86:[2,78],87:[2,78],88:[2,78],89:[2,78]},{25:[1,236]},{18:[2,117]},{8:[2,116],10:[2,116],14:237,34:[2,116],39:[2,116],45:[2,116],51:[2,116],65:[1,62],90:[2,116],106:[2,116],107:[2,116],108:[2,116],109:[2,116],110:[2,116],111:[2,116],112:[2,116],113:[2,116],114:[2,116],116:[2,116]},{8:[2,116],14:238,20:[2,116],21:[2,116],34:[2,116],38:[2,116],65:[1,62],76:[2,116],79:[2,116]},{8:[1,195],12:196,18:[2,122],39:[1,9],100:240,102:239},{5:[2,7],18:[2,7]},{14:241,65:[1,62],81:[2,116]},{65:[2,92],81:[2,92]},{65:[2,93],81:[2,93]},{65:[2,94],81:[2,94]},{34:[1,59],36:242},{76:[1,243]},{16:[2,98],20:[2,98],21:[2,98],38:[2,98],52:[2,98],60:[2,98],65:[2,98],66:[2,98],79:[2,98]},{8:[1,38],10:[1,40],12:56,28:244,34:[1,59],36:55,39:[1,9],44:58,45:[1,60],48:51,51:[1,27],90:[1,37],96:52,97:53,98:54,106:[1,57],107:[1,28],108:[1,29],109:[1,30],110:[1,31],111:[1,32],112:[1,33],113:[1,34],114:[1,35],115:36,116:[1,39]},{8:[1,102],15:245,20:[1,111],21:[1,114],34:[1,106],35:103,38:[1,112],58:98,62:99,67:100,69:101,70:105,71:107,72:108,73:109,74:110,76:[1,104],79:[1,113]},{18:[2,118]},{18:[2,121]},{81:[2,84]},{76:[1,246]},{81:[2,81],84:[2,81],85:[2,81],86:[2,81],87:[2,81],88:[2,81],89:[2,81]},{29:[1,247]},{16:[1,248]},{65:[2,95],81:[2,95]},{8:[2,116],14:249,18:[2,116],39:[2,116],65:[1,62]},{8:[2,116],14:170,17:250,39:[2,116],65:[1,62]},{8:[1,195],12:196,18:[2,122],39:[1,9],100:240,102:251},{18:[1,252]},{18:[2,119]},{8:[2,116],14:253,18:[2,116],39:[2,116],65:[1,62]},{8:[1,195],12:196,18:[2,122],39:[1,9],100:240,102:254},{18:[2,120]}],
defaultActions: {11:[2,1],19:[2,19],64:[2,18],68:[2,99],70:[2,21],95:[2,36],121:[2,22],127:[2,124],128:[2,32],129:[2,33],140:[2,38],151:[2,49],173:[2,100],179:[2,39],194:[2,114],201:[2,50],225:[2,117],239:[2,118],240:[2,121],241:[2,84],251:[2,119],254:[2,120]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


function __() {
	var obj = arguments[0];
	for(var i=1; i<arguments.length; i++) {
		var arg = arguments[i];
		for(var e in arg) {
			obj[e] = arg[e];
		}
	}
	return obj;
}

function strip(str) {
	return str.substr(1, str.length-2);
}

function resolveValue(val, scope) {
	var type = typeof val;
	if(type === 'string') {
		return val;
	}
	else if(type === 'number') {
		return val;
	}
	else if(type === 'object') {
		if(val.isStr) {
			return val;
		}
		else if(val.isVar) {
			var node = scope;
			var names = val.varName;
			if(names.length === 1) {
				var name = names[0];
				do {
					if(node[name]) {
						return node[name];
					}
					node = node['^'];
				} while(node);
			}
			else {
				var candidate = undefined;
				var namesLen = names.length;

				// first, resolve the namespace address
				var name = names[namesLen-1];
				do {
					if(node[name]) {
						candidate = node[name];
						break;
					}
					node = node['^'];
				} while(node);

				// next, follow the variable down the scope tree
				for(i=namesLen-2; i>=0; i--) {
					if(typeof candidate === 'undefined') {
						return undefined;
					}
					candidate = candidate[names[i]];
				}

				// finally, return whatever we found
				return candidate;
			}
		}
		else if(val.isNsi) {
			console.log('# ',val);
			var names = val.varName;
			var nameLen = names.length;
			var node = resolveValue({
				isVar: true,
				varName: names[nameLen-1],
			}, scope);
			if(!node) return undefined;
			for(var i=nameLen-2; i>=0; i--) {
				var next = node[names[i]];
				if(!next) {
					return undefined;
				}
				node = next;
			}
			return node;
		}
		else if(val.join) {
			var expr = resolveExpr(val, scope);
			if(expr.isStr) return irks(expr.value);
			return expr.value;
		}
		else if(val.isCall) {
			var args = val.args;
			var isString = false;
			var expr = resolveExpr(args, scope);
			if(expr.isStr) expr.value = irks(expr.value);
			return val.method+expr.value+')';
		}
		else if(val.isBessCall) {
			return val;
		}
		else if(val.isArithmetic) {
			return resolveArithmetic(val.term, scope);
		}
	}
	return undefined;
}

function resolveArithmetic(term, scope) {

	var ra = resolveValue(term[2], scope);
	var a = parseFloat(ra);
	var au = /^[0-9\-\+\.]+(.*)/i.exec(ra);
	au = au? au[1]: '';

	var rb = resolveValue(term[0], scope);
	var b = parseFloat(rb);
	var bu = /^[0-9\-\+\.]+(.*)/i.exec(rb);
	bu = bu? bu[1]: '';

	var r;
	var ru;

	switch(term[1]) {
		case '-':
			r = a * b; break;
		case '+':
			r = a + b; break;
		case '*':
			r = a * b; break;
		case '/':
			r = a / b; break;
		case '^':
			r = a ^ b; break;
		case '%':
			r = a % b; break;
		case '|':
			r = a | b; break;
		case '&':
			r = a & b; break;
	}

	ru = au || bu;
	return r+''+ru;
}

function irks(str) {
	return "'"
		+str
			.replace(/\\(.)/g, function(a,b){return b;})
			.replace(/'/g,"\\'")
		+"'";
}
function dirks(str) {
	return '"'
		+str
			.replace(/\\(.)/g, function(a,b){return b;})
			.replace(/"/g,'\\"')
		+'"';
}

function resolveVarName(name, scope) {
	var b = '';
	for(var i=decl.varName.length-1; i>=0; i--) {

	}
}

function resolveExpr(list, scope) {
	var b = [];
	var prevStr = true;
	var hasStr = false;

	// console.log(list);
	
	for(var i=list.length-1; i>=0; i--) {
		var value = resolveValue( list[i], scope );
		if(!value) {
			// undefined variable!
		}
		
		if(!value.isStr) {
			if(!prevStr) b.push(' ');
			prevStr = false;
		}
		else {
			value = value.value;
			prevStr = true;
			hasStr = true;
		}
		b.push(value);
	}
	
	return {
		isStr: hasStr,
		value: b.join(''),
	};
}

function expandDeclaration(decl, scope, jsol, sheet) {
	var name = decl.varName;
	if(decl.isAssignment) {
		var b = resolveExpr(decl.gets, scope).value;
		scope[name] = b;
		jsol[name] = b;
	}
	else if(decl.body) {
		var subScope = { '^': scope };
		var subJsol = {};
		var body = decl.body;
		var bodyLen = body.length;
		for(var i=bodyLen-1; i>=0; i--) {
			expandDeclaration( body[i], subScope, subJsol, sheet );
		}
		scope[name] = subScope;
		jsol[name] = subJsol;
	}
	else if(decl.isFunction) {
		console.log('### function: ',decl);
	}
	else if(decl.isValueFunction) {
		buildValueFunction(decl, scope, jsol);
	}
	else if(decl.isDictionary) {
		buildDictionary(decl, scope, jsol);
	}
	else if(decl.isRule) {
		var selectors = resolveSelectors(decl.selectors, scope, jsol);
		var rule = [];
		var styles = decl.css;
		var assoc = {};
		for(var i=styles.length-1; i>=0; i--) {
			var style = styles[i];
			var exprValue = resolveValue(style.value, scope);
			rule.push(style.prop+': '+exprValue+';');
			assoc[style.prop] = exprValue;
		}
		sheet.push(
			selectors+' {\n\t'+rule.join('\n\t')+'\n}\n'
		);
		if(name) {
			jsol[name] = assoc;
		}
	}
	else {
		console.log('unable to id: ',decl);
	}
}

function buildDictionary(decl, scope, jsol) {
	var b = resolveExpr(decl.bess.gets, scope).value;
	var name = decl.varName;
	if(!scope[name]) scope[name] = {};
	node = scope[name];

	var args = decl.arguments;
	for(var i=args.length-1; i>=0; i--) {
		var arg = args[i].join(' ');
		if(i===0) node[arg] = b;
		else {
			if(!node[arg]) node[arg] = {};
			node = node[arg];
		}
	}

	jsol[name] = scope[name];
}

function buildValueFunction(decl, scope, jsol) {
	var argLookup = {};
	var args = decl.arguments;
	var createFunc = [];
	for(var i=args.length-1; i>=0; i--) {
		var arg = args[i];
		argLookup[ arg.substr(1) ] = true;
		createFunc.push(arg);
	}

	var name = decl.varName;
	var gets = decl.gets;
	var b = [];

	var c = [];
	var prevStr = true;
	var hasStr = false;

	for(var i=gets.length-1; i>=0; i--) {
		var tmp = gets[i];
		// console.log('looking for: ',tmp);
		if(argLookup[tmp.varName] || tmp.isBessCall) {
			if(c.length) {
				b.push({
					isStr: true,
					value: c.join('')
				});
			}
			c.length = 0;
			b.push(tmp);
			prevStr = false;
		}
		else {
			var r = resolveValue(tmp, scope), value;
			if(!r.isStr) {
				if(!prevStr) c.push(' ');
				prevStr = false;
			}
			else {
				r = r.value;
				prevStr = true;
			}
			c.push(r);
		}
	}

	if(c.length) {
		b.push({
			isStr: true,
			value: c.join('')
		});
	}

	var retline = [];
	for(var i=0; i<b.length; i++) {
		var bi = b[i];
		if(bi.isStr) {
			retline.push(
				irks( bi.value )
			);
		}
		else if(bi.isVar) {
			retline.push(
				'$'+bi.varName
			);
		}
		else if(bi.isBessCall) {
			var bnode = resolveValue({
					isVar: true,
					varName: bi.method,
				}, scope);
			var bargs = bi.args;
			for(var j=bargs.length-1; j>=0; j--) {
				// grab the first element in the var name array
				var barg = bargs[j];
				if(argLookup[barg.varName]) {

				}
				// if(bnode.hasOwnProperty(bargName)) {
				// 	bnode = bnode[bargName];
				// }
			}
			// console.log('bnode: ',bnode);
			retline.push(
				'this('+JSOL.stringify(bi)+')' // TODO: replace with proper method call (inspect bi: {method, args} )
			);
		}
	}

	var body = 'return '+retline.join('+')+';';
	// console.log('**** => ',body);
	createFunc.push(body);
	jsol[name] = scope[name] = Function.apply(global, createFunc);
}

function resolveSelectorTarget(trgt, scope) {
	var val = trgt.value;
	var expr = resolveValue(val, scope);
	// console.log('** resolving selecor target: ',trgt,' => ',expr);
	if(trgt.isClassPrefix) {
		return '.'+expr;
	}
	else if(trgt.isIdPrefix) {
		return '#'+expr;
	}
	else if(trgt.isPseudo) {
		return ':'+expr;
	}
	else if(trgt.op) {
		return '['
			+trgt.of.nv+trgt.op
			+dirks(
				resolveValue(trgt.to, scope)
			)
			+']';
	}
}

function resolveSelectors(sels, scope, jsol) {
	var css = '';
	for(var i=sels.length-1; i>=0; i--) {
		var selector = sels[i];
		for(var j=selector.length-1; j>=0; j--) {
			var generation = selector[j];
			for(k=generation.length-1; k>=0; k--) {
				var chunk = generation[k];
				if(typeof chunk === 'string') {
					css += chunk;
				}
				else {
					css += resolveSelectorTarget(chunk, scope);
				}
				// else {
				// 	console.warn('unabled to resolve: ',chunk);
				// }
			}
		}
	}
	return css;
}

var JSOL={};
(function(){function l(b){return 10>b?"0"+b:b}function q(b){r.lastIndex=0;return r.test(b)?'"'+b.replace(r,function(b){var c=t[b];return"string"===typeof c?c:"\\u"+("0000"+b.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+b+'"'}function n(b,k){var c,d,h,p,g=e,f,a=k[b];a&&("object"===typeof a&&"function"===typeof a.toJSOL)&&(a=a.toJSOL(b));"function"===typeof j&&(a=j.call(k,b,a));switch(typeof a){case "string":return q(a);case "number":return isFinite(a)?String(a):"null";case "boolean":case "null":return String(a);case "object":if(!a)return"null";
e+=m;f=[];if("[object Array]"===Object.prototype.toString.apply(a)){p=a.length;for(c=0;c<p;c+=1)f[c]=n(c,a)||"null";h=0===f.length?"[]":e?"[\n"+e+f.join(",\n"+e)+"\n"+g+"]":"["+f.join(",")+"]";e=g;return h}if(j&&"object"===typeof j){p=j.length;for(c=0;c<p;c+=1)"string"===typeof j[c]&&(d=j[c],(h=n(d,a))&&f.push(q(d)+(e?": ":":")+h))}else for(d in a)Object.prototype.hasOwnProperty.call(a,d)&&(h=n(d,a))&&f.push(q(d)+(e?": ":":")+h);h=0===f.length?"{}":e?"{\n"+e+f.join(",\n"+e)+"\n"+g+"}":"{"+f.join(",")+
"}";e=g;return h;case "function":return a.toString().replace(/^function anonymous/,"function")}}"function"!==typeof Date.prototype.toJSOL&&(Date.prototype.toJSOL=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+l(this.getUTCMonth()+1)+"-"+l(this.getUTCDate())+"T"+l(this.getUTCHours())+":"+l(this.getUTCMinutes())+":"+l(this.getUTCSeconds())+"Z":null},String.prototype.toJSOL=Number.prototype.toJSOL=Boolean.prototype.toJSOL=function(){return this.valueOf()});var s=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
r=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,e,m,t={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},j;"function"!==typeof JSOL.stringify&&(JSOL.stringify=function(b,k,c){var d;m=e="";if("number"===typeof c)for(d=0;d<c;d+=1)m+=" ";else"string"===typeof c&&(m=c);if((j=k)&&"function"!==typeof k&&("object"!==typeof k||"number"!==typeof k.length))throw Error("JSOL.stringify");return n("",{"":b})});
"function"!==typeof JSOL.parse&&(JSOL.parse=function(b,e){function c(b,d){var g,f,a=b[d];if(a&&"object"===typeof a)for(g in a)Object.prototype.hasOwnProperty.call(a,g)&&(f=c(a,g),void 0!==f?a[g]=f:delete a[g]);return e.call(b,d,a)}var d;b=String(b);s.lastIndex=0;s.test(b)&&(b=b.replace(s,function(b){return"\\u"+("0000"+b.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(b.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return d=eval("("+b+")"),"function"===typeof e?c({"":d},""):d;throw new SyntaxError("JSOL.parse");})})();
/* Jison generated lexer */
var lexer = (function(){
var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    }});
lexer.options = {};
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:/* ignore comments */
break;
case 1: 
break;
case 2: return 10; 
break;
case 3: return 8; 
break;
case 4:
		this.begin('bess');
		return yy_.yytext;
	
break;
case 5: this.begin('selector'); return yy_.yytext; 
break;
case 6: this.popState(); return yy_.yytext; 
break;
case 7: this.popState(); return yy_.yytext; 
break;
case 8: this.popState(); this.begin('css'); return yy_.yytext; 
break;
case 9: this.popState(); return yy_.yytext; 
break;
case 10: return 65; 
break;
case 11: return 'CDO'; 
break;
case 12: return 'CDC'; 
break;
case 13: return 88; 
break;
case 14: return 89; 
break;
case 15: return 84; 
break;
case 16: return 85; 
break;
case 17: return 86; 
break;
case 18: return 90; 
break;
case 19: return 'BAD_STRING'; 
break;
case 20: return 106; 
break;
case 21: return 10; 
break;
case 22: return 8; 
break;
case 23: return 'IMPORT_SYM'; 
break;
case 24: return 'PAGE_SYM'; 
break;
case 25: return 'MEDIA_SYM'; 
break;
case 26: return 'CHARSET_SYM'; 
break;
case 27: return 'ATKEYWORD'; 
break;
case 28: return 'NOT'; 
break;
case 29: return 52; 
break;
case 30: return 66; 
break;
case 31: return 33; 
break;
case 32: return '~'; 
break;
case 33: return 104; 
break;
case 34: return 110; 
break;
case 35: return 111; 
break;
case 36: return 109; 
break;
case 37: return 109; 
break;
case 38: return 109; 
break;
case 39: return 109; 
break;
case 40: return 109; 
break;
case 41: return 109; 
break;
case 42: return 112; 
break;
case 43: return 112; 
break;
case 44: return 112; 
break;
case 45: return 113; 
break;
case 46: return 113; 
break;
case 47: return 114; 
break;
case 48: return 114; 
break;
case 49: return 'DIMENSION'; 
break;
case 50: return 108; 
break;
case 51: return 107; 
break;
case 52: return 'INVALID'; 
break;
case 53: this.begin('math'); return yy_.yytext; 
break;
case 54: this.popState(); return yy_.yytext; 
break;
case 55: return 8; 
break;
case 56: 
break;
case 57: return yy_.yytext; 
break;
case 58: return 5; 
break;
}
};
lexer.rules = [/^(?:\/\*[^*]*\*+([^/*][^*]*\*+)*\/)/,/^(?:([ \t\r\n]+))/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*)\()/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?::)/,/^(?:\/)/,/^(?:\{)/,/^(?:;)/,/^(?:\{)/,/^(?:\})/,/^(?:([ \t\r\n]+))/,/^(?:<!--)/,/^(?:-->)/,/^(?:~=)/,/^(?:\|=)/,/^(?:\^=)/,/^(?:\$=)/,/^(?:\*=)/,/^(?:(("([^\n\r\\"]|\\(\n|\r\n|\r\b)|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*")|('([^\n\r\\']|\\(\n|\r\n|\r\b)|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*')))/,/^(?:(("([^\n\r\\"]|\\(\n|\r\n|\r\b)|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*\\?)|('([^\n\r\\']|\\(\n|\r\n|\r\b)|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*\\?)))/,/^(?:`([^`]*)`)/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*)\()/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?:([iI])([mM])([pP])([oO])([rR])([tT]))/,/^(?:([pP])([aA])([gG])([eE]))/,/^(?:([mM])([eE])([dD])([iI])([aA]))/,/^(?:@charset )/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?::([nN])([oO])([tT])\()/,/^(?:(([ \t\r\n]+)?)\+)/,/^(?:(([ \t\r\n]+)?)>)/,/^(?:(([ \t\r\n]+)?),)/,/^(?:(([ \t\r\n]+)?)~)/,/^(?:!((([ \t\r\n]+)?)|(\/\*[^*]*\*+([^/*][^*]*\*+)*\/))*([iI])([mM])([pP])([oO])([rR])([tT])([aA])([nN])([tT]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([eE])([mM]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([eE])([xX]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([pP])([xX]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([cC])([mM]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([mM])([mM]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([iI])([nN]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([pP])([tT]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([pP])([cC]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([dD])([eE])([gG]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([rR])([aA])([dD]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([gG])([rR])([aA])([dD]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([mM])([sS]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([sS]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([hH])([zZ]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([kK])([hH])([zZ]))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*))%)/,/^(?:(([\.][0-9]+)|([0-9]+[\.]?[0-9]*)))/,/^(?:{invalid})/,/^(?:\()/,/^(?:\))/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?:([ \t\r\n]+))/,/^(?:.)/,/^(?:$)/];
lexer.conditions = {"bess":{"rules":[0,1,6,7,18,19,21,22,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,57,58],"inclusive":true},"selector":{"rules":[0,8,10,11,12,13,14,15,16,17,18,21,22,27,28,29,30,31,32,49,50,51,52,57,58],"inclusive":true},"css":{"rules":[0,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,57,58],"inclusive":true},"math":{"rules":[0,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58],"inclusive":true},"INITIAL":{"rules":[0,1,2,3,4,5,57,58],"inclusive":true}};
return lexer;})()
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = bessParser;
exports.Parser = bessParser.Parser;
exports.parse = function () { return bessParser.parse.apply(bessParser, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    var source, cwd;
    if (typeof process !== 'undefined') {
        source = require('fs').readFileSync(require('path').resolve(args[1]), "utf8");
    } else {
        source = require("file").path(require("file").cwd()).join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}