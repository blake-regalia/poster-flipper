/* Jison generated parser */
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"grammar":3,"declarations":4,"EOF":5,"declarationOptional":6,"declaration":7,"IDENT":8,"bessAfterIdent":9,"FUNCTION":10,"bessAssocOrFunc":11,"bessFunctionCall":12,"/":13,"W":14,"selectorsGroup":15,"{":16,"cssBody":17,"}":18,"bessHiddenRule":19,"#":20,":":21,"bessAssign":22,"bessBody":23,"bessArgumentsOptional":24,")":25,"bessFuncValueOrCss":26,"plainCssExprArgs":27,"cssExpr":28,";":29,"bessArguments":30,"bessArgument":31,"bessArgumentMore":32,",":33,"$":34,"bessVariable":35,"bessNamespaceIdent":36,"bessNamespaceResolver":37,".":38,"@":39,"bessFunctionNamespace":40,"cssExprOptional":41,"bessFunctionNamespaceResolver":42,"bessFunctionNamespaceResolverOptional":43,"selector":44,"selectorsGroupMoreOptional":45,"COMMA":46,"selectorOptional":47,"selectorSimple":48,"selectorMoreOptional":49,"selectorCombinator":50,"S":51,"+":52,">":53,"selectorVariable":54,"selectorSimpleSpecManyOptional":55,"selectorSimpleSpecMany":56,"selectorSimpleSpec":57,"selectorId":58,"selectorClass":59,"selectorAttrib":60,"selectorPseudo":61,"selectorNamespacePrefixOptional":62,"`":63,"selectorNamePrefixWithElement":64,"selectorNamePrevWasNS":65,"[":66,"selectorAttribSpecOptional":67,"]":68,"selectorAttribMatch":69,"selectorAttribTarget":70,"PREFIXMATCH":71,"SUFFIXMATCH":72,"SUBSTRINGMATCH":73,"=":74,"INCLUDES":75,"DASHMATCH":76,"STRING":77,"selectorPseudoOptions":78,"plainCssExpr":79,"plainCssExprArgsMore":80,"plainCssTerm":81,"plainCssExprMore":82,"cssUnaryOperator":83,"cssUnit":84,"cssValue":85,"cssOperator":86,"-":87,"cssDeclaration":88,"cssAfterIdent":89,"cssDeclarationMore":90,"cssPriority":91,"IMPORTANT_SYM":92,"cssTerm":93,"cssExprMore":94,"JAVASCRIPT":95,"NUMBER":96,"PERCENTAGE":97,"LENGTH":98,"EMS":99,"EXS":100,"ANGLE":101,"TIME":102,"FREQ":103,"cssFunction":104,"HASH":105,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",8:"IDENT",10:"FUNCTION",13:"/",16:"{",18:"}",20:"#",21:":",25:")",29:";",33:",",34:"$",38:".",39:"@",46:"COMMA",51:"S",52:"+",53:">",63:"`",66:"[",68:"]",71:"PREFIXMATCH",72:"SUFFIXMATCH",73:"SUBSTRINGMATCH",74:"=",75:"INCLUDES",76:"DASHMATCH",77:"STRING",87:"-",92:"IMPORTANT_SYM",95:"JAVASCRIPT",96:"NUMBER",97:"PERCENTAGE",98:"LENGTH",99:"EMS",100:"EXS",101:"ANGLE",102:"TIME",103:"FREQ",105:"HASH"},
productions_: [0,[3,2],[4,1],[6,1],[6,0],[7,3],[7,3],[7,8],[7,2],[19,7],[9,2],[9,6],[9,3],[11,3],[11,4],[26,3],[26,2],[22,2],[23,1],[24,1],[24,0],[30,2],[32,2],[32,0],[31,2],[35,2],[36,3],[37,3],[37,0],[12,5],[40,1],[40,2],[42,3],[43,1],[43,0],[15,2],[45,3],[45,0],[47,1],[47,0],[44,2],[49,2],[49,2],[49,0],[50,2],[50,2],[48,2],[48,1],[55,1],[55,0],[56,2],[57,1],[57,1],[57,1],[57,1],[62,1],[62,0],[59,2],[58,2],[54,1],[54,1],[54,3],[64,3],[64,1],[64,3],[65,1],[65,1],[65,3],[65,0],[60,5],[67,4],[67,0],[69,1],[69,1],[69,1],[69,1],[69,1],[69,1],[70,1],[70,1],[70,1],[70,3],[61,2],[78,1],[78,5],[27,2],[80,3],[80,0],[79,3],[82,1],[82,0],[81,2],[81,1],[81,1],[86,2],[86,2],[86,1],[83,1],[83,1],[17,2],[14,1],[14,0],[88,3],[88,4],[89,6],[89,8],[90,1],[90,0],[91,2],[41,1],[41,0],[28,2],[94,2],[94,1],[94,1],[94,0],[93,2],[93,1],[93,1],[93,1],[93,1],[93,1],[84,1],[84,1],[84,1],[84,1],[84,1],[84,1],[84,1],[84,1],[84,1],[85,1],[85,1],[85,1],[104,4]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1:
			var scopeRoot = {};
			var cssSheet = [];
			var jsol = {};
			scopeRoot['^'] = false;
			var decls = $$[$0-1];
			for(var i=decls.length-1; i>=0; i--) {
				expandDeclaration( decls[i], scopeRoot, jsol, cssSheet );
			}

			// console.log( JSOL.stringify(jsol, null, '\t') );
			return {
				css: cssSheet.join('\n'),
				js: JSOL.stringify(jsol, null, '\t'),
			};
		
break;
case 4:
			this.$ = [];
		
break;
case 5:
			this.$ = $$[$0];
			this.$.push(
				__($$[$0-1], {
					varName: $$[$0-2],
				})
			);
			// console.log(this.$);
		
break;
case 6:
			this.$ = $$[$0];
			this.$.push(
				__($$[$0-1], {
					varName: $$[$0-2].substr(0,$$[$0-2].length-1),
				})
			);
		
break;
case 7:
			this.$ = $$[$0];
			this.$.push(
				__($$[$0-7], {
					isDictionaryCall: true,
					selectors: $$[$0-4],
					css: $$[$0-2],
				})
			);
		
break;
case 8:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 9:
			this.$ = {
				isRule: true,
				selectors: $$[$0-3],
				css: $$[$0-1],
				isTransparent: true,
			};
		
break;
case 10:
			this.$ = __($$[$0], {
				isAssignment: true,
			});
		
break;
case 11:
			this.$ = {
				isRule: true,
				selectors: $$[$0-3],
				css: $$[$0-1],
			};
		
break;
case 12:
			this.$ = {
				body: $$[$0-1],
			};
		
break;
case 13:
			this.$ = __($$[$0], {
				arguments: $$[$0-2],
			});
		
break;
case 14:
			this.$ = {
				isDictionary: true,
				arguments: $$[$0-3],
				bess: $$[$0],
			};
		
break;
case 15:
			this.$ = __($$[$0-1], {
				isFunction: true,
			});
		
break;
case 16:
			this.$ = __($$[$0], {
				isValueFunction: true,
			});
		
break;
case 17:
			this.$ = {
				gets: $$[$0-1],
			};
		
break;
case 20:
			this.$ = false;
		
break;
case 21:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 22:
			this.$ = $$[$0];
		
break;
case 23:
			this.$ = [];
		
break;
case 24:
			this.$ = '$' + $$[$0];
		
break;
case 25:
			this.$ = {
				isVar: true,
				varName: [ $$[$0] ],
			};
		
break;
case 26:
			this.$ = $$[$0];

			this.$.push($$[$0-1]);
			this.$ = {
				isVar: true,
				varName: this.$,
			};
	 	
break;
case 27:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 28:
			this.$ = [];
		
break;
case 29:
			this.$ = {
				isBessCall: true,
				method: $$[$0-3],
				args: $$[$0-1],
			};
		
break;
case 30:
			this.$ = [ $$[$0].substr(0, $$[$0].length-1) ];
		
break;
case 31:
			this.$ = $$[$0-1];
			this.$.unshift($$[$0].substr(0, $$[$0].length-1));
		
break;
case 32:
			this.$ = $$[$0];
			this.$.push($$[$0-2]);
		
break;
case 34:
			this.$ = [];
		
break;
case 35:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 36:
			this.$ = $$[$0];
		
break;
case 37:
			this.$ = [];
		
break;
case 40:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 41:
			this.$ = selector;
			this.$.push($$[$0-1]);
		
break;
case 42:
			this.$ = $$[$0];
			if(this.$) {
				this.$.push(' ');
			}
			else {
				this.$ = [];
			}
		
break;
case 43:
			this.$ = [];
		
break;
case 46:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 47:
			this.$ = $$[$0];
		
break;
case 49:
			this.$ = [];
		
break;
case 50:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 57:
			this.$ = {
				isClassPrefix: true,
				value: $$[$0],
			};
		
break;
case 58:
			this.$ = {
				isIdPrefix: true,
				value: $$[$0],
			};
		
break;
case 61:
			this.$ = $$[$0-1];
		
break;
case 62:
			this.$ = $$[$0];
			if(this.$) {
				this.$ = {
					ns: $$[$0-2],
					nv: this.$,
				};
			}
			else {
				this.$ = {
					nv: $$[$0-2],
				};
			}
		
break;
case 63:
			this.$ = {
				nv: $$[$0],
			};
		
break;
case 68:
			this.$ = false;
		
break;
case 69:
			this.$ = __($$[$0-1], {
				of: $$[$0-2],
			});
		
break;
case 70:
			this.$ = {
				op: $$[$0-3],
				to: $$[$0-1],
			};
		
break;
case 79:
			this.$ = strip($$[$0]);
		
break;
case 85:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 86:
			this.$ = [ plainCssExpr ];
		
break;
case 87:
			this.$ = [];
		
break;
case 88:
			this.$ = $$[$0];
			this.$.push($$[$0-2]);
		
break;
case 90:
			this.$ = [];
		
break;
case 91:
			this.$ = $$[$0-1] + $$[$0];
		
break;
case 93:
			this.$ = $$[$0];
		
break;
case 99:
			this.$ = $$[$0];
		
break;
case 102:
			this.$ = $$[$0];
			this.$[this.$.length-1].prop = $$[$0-2];
		
break;
case 103:
			this.$ = $$[$0];
			this.$.push($$[$0-3]);
		
break;
case 104:
			this.$ = $$[$0];
			this.$.push({
				value: $$[$0-3],
			});
		
break;
case 105:
			this.$ = $$[$0];
			this.$.push({
				isRuleExpansion: true,
				selectors: $$[$0-5],
				css: $$[$0-3],
			});
		
break;
case 107:
			this.$ = [];
		
break;
case 110:
			this.$ = false;
		
break;
case 111:
			this.$ = $$[$0];
			this.$.push($$[$0-1]);
		
break;
case 112:
			this.$ = $$[$0];
			var term = this.$.pop();
			this.$.push(term);
			if($$[$0-1] != ' ') {
				this.$.push($$[$0-1]);
			}
		
break;
case 115:
			this.$ = [];
		
break;
case 116:
			this.$ = $$[$0-1] + $$[$0];
		
break;
case 131:
			this.$ = {
				isStr: true,
				value: strip($$[$0]),
			};
		
break;
case 134:
			this.$ = {
				isCall: true,
				method: $$[$0-3],
				args: $$[$0-1],
			};
		
break;
}
},
table: [{3:1,4:2,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,19:8,20:[1,10],39:[1,9]},{1:[3]},{5:[1,11]},{5:[2,2],18:[2,2]},{5:[2,3],18:[2,3]},{9:12,13:[1,14],16:[1,15],21:[1,13]},{8:[1,39],10:[1,41],11:16,24:17,25:[2,20],27:18,30:19,31:21,34:[1,23],52:[1,28],77:[1,38],79:20,81:22,83:24,84:25,85:26,87:[1,27],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{13:[1,42]},{4:43,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,18:[2,4],19:8,20:[1,10],39:[1,9]},{8:[1,47],10:[1,45],40:44,42:46},{13:[1,48]},{1:[2,1]},{4:49,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,18:[2,4],19:8,20:[1,10],39:[1,9]},{8:[1,39],10:[1,41],12:57,22:50,28:51,34:[1,59],36:56,39:[1,9],52:[1,28],77:[1,38],83:53,84:54,85:55,87:[1,27],93:52,95:[1,58],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{8:[2,101],14:60,20:[2,101],21:[2,101],34:[2,101],38:[2,101],51:[1,61],63:[2,101],66:[2,101]},{7:63,8:[1,5],10:[1,6],12:7,19:8,20:[1,10],23:62,39:[1,9]},{4:64,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,18:[2,4],19:8,20:[1,10],39:[1,9]},{25:[1,65]},{25:[1,66]},{25:[2,19]},{25:[2,87],33:[1,68],80:67},{25:[2,23],32:69,33:[1,70]},{8:[2,101],10:[2,101],14:71,25:[2,101],33:[2,101],51:[1,61],52:[2,101],77:[2,101],87:[2,101],96:[2,101],97:[2,101],98:[2,101],99:[2,101],100:[2,101],101:[2,101],102:[2,101],103:[2,101],105:[2,101]},{8:[1,72]},{10:[1,41],84:73,96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37},{8:[2,92],10:[2,92],25:[2,92],33:[2,92],51:[2,92],52:[2,92],77:[2,92],87:[2,92],96:[2,92],97:[2,92],98:[2,92],99:[2,92],100:[2,92],101:[2,92],102:[2,92],103:[2,92],105:[2,92]},{8:[2,93],10:[2,93],25:[2,93],33:[2,93],51:[2,93],52:[2,93],77:[2,93],87:[2,93],96:[2,93],97:[2,93],98:[2,93],99:[2,93],100:[2,93],101:[2,93],102:[2,93],103:[2,93],105:[2,93]},{10:[2,97],96:[2,97],97:[2,97],98:[2,97],99:[2,97],100:[2,97],101:[2,97],102:[2,97],103:[2,97]},{10:[2,98],96:[2,98],97:[2,98],98:[2,98],99:[2,98],100:[2,98],101:[2,98],102:[2,98],103:[2,98]},{8:[2,122],10:[2,122],13:[2,122],25:[2,122],29:[2,122],33:[2,122],34:[2,122],39:[2,122],51:[2,122],52:[2,122],77:[2,122],87:[2,122],92:[2,122],95:[2,122],96:[2,122],97:[2,122],98:[2,122],99:[2,122],100:[2,122],101:[2,122],102:[2,122],103:[2,122],105:[2,122]},{8:[2,123],10:[2,123],13:[2,123],25:[2,123],29:[2,123],33:[2,123],34:[2,123],39:[2,123],51:[2,123],52:[2,123],77:[2,123],87:[2,123],92:[2,123],95:[2,123],96:[2,123],97:[2,123],98:[2,123],99:[2,123],100:[2,123],101:[2,123],102:[2,123],103:[2,123],105:[2,123]},{8:[2,124],10:[2,124],13:[2,124],25:[2,124],29:[2,124],33:[2,124],34:[2,124],39:[2,124],51:[2,124],52:[2,124],77:[2,124],87:[2,124],92:[2,124],95:[2,124],96:[2,124],97:[2,124],98:[2,124],99:[2,124],100:[2,124],101:[2,124],102:[2,124],103:[2,124],105:[2,124]},{8:[2,125],10:[2,125],13:[2,125],25:[2,125],29:[2,125],33:[2,125],34:[2,125],39:[2,125],51:[2,125],52:[2,125],77:[2,125],87:[2,125],92:[2,125],95:[2,125],96:[2,125],97:[2,125],98:[2,125],99:[2,125],100:[2,125],101:[2,125],102:[2,125],103:[2,125],105:[2,125]},{8:[2,126],10:[2,126],13:[2,126],25:[2,126],29:[2,126],33:[2,126],34:[2,126],39:[2,126],51:[2,126],52:[2,126],77:[2,126],87:[2,126],92:[2,126],95:[2,126],96:[2,126],97:[2,126],98:[2,126],99:[2,126],100:[2,126],101:[2,126],102:[2,126],103:[2,126],105:[2,126]},{8:[2,127],10:[2,127],13:[2,127],25:[2,127],29:[2,127],33:[2,127],34:[2,127],39:[2,127],51:[2,127],52:[2,127],77:[2,127],87:[2,127],92:[2,127],95:[2,127],96:[2,127],97:[2,127],98:[2,127],99:[2,127],100:[2,127],101:[2,127],102:[2,127],103:[2,127],105:[2,127]},{8:[2,128],10:[2,128],13:[2,128],25:[2,128],29:[2,128],33:[2,128],34:[2,128],39:[2,128],51:[2,128],52:[2,128],77:[2,128],87:[2,128],92:[2,128],95:[2,128],96:[2,128],97:[2,128],98:[2,128],99:[2,128],100:[2,128],101:[2,128],102:[2,128],103:[2,128],105:[2,128]},{8:[2,129],10:[2,129],13:[2,129],25:[2,129],29:[2,129],33:[2,129],34:[2,129],39:[2,129],51:[2,129],52:[2,129],77:[2,129],87:[2,129],92:[2,129],95:[2,129],96:[2,129],97:[2,129],98:[2,129],99:[2,129],100:[2,129],101:[2,129],102:[2,129],103:[2,129],105:[2,129]},{8:[2,130],10:[2,130],13:[2,130],25:[2,130],29:[2,130],33:[2,130],34:[2,130],39:[2,130],51:[2,130],52:[2,130],77:[2,130],87:[2,130],92:[2,130],95:[2,130],96:[2,130],97:[2,130],98:[2,130],99:[2,130],100:[2,130],101:[2,130],102:[2,130],103:[2,130],105:[2,130]},{8:[2,131],10:[2,131],13:[2,131],25:[2,131],29:[2,131],33:[2,131],34:[2,131],39:[2,131],51:[2,131],52:[2,131],77:[2,131],87:[2,131],92:[2,131],95:[2,131],96:[2,131],97:[2,131],98:[2,131],99:[2,131],100:[2,131],101:[2,131],102:[2,131],103:[2,131],105:[2,131]},{8:[2,132],10:[2,132],13:[2,132],25:[2,132],29:[2,132],33:[2,132],34:[2,132],39:[2,132],51:[2,132],52:[2,132],77:[2,132],87:[2,132],92:[2,132],95:[2,132],96:[2,132],97:[2,132],98:[2,132],99:[2,132],100:[2,132],101:[2,132],102:[2,132],103:[2,132],105:[2,132]},{8:[2,133],10:[2,133],13:[2,133],25:[2,133],29:[2,133],33:[2,133],34:[2,133],39:[2,133],51:[2,133],52:[2,133],77:[2,133],87:[2,133],92:[2,133],95:[2,133],96:[2,133],97:[2,133],98:[2,133],99:[2,133],100:[2,133],101:[2,133],102:[2,133],103:[2,133],105:[2,133]},{8:[2,101],10:[2,101],14:74,34:[2,101],39:[2,101],51:[1,61],52:[2,101],77:[2,101],87:[2,101],95:[2,101],96:[2,101],97:[2,101],98:[2,101],99:[2,101],100:[2,101],101:[2,101],102:[2,101],103:[2,101],105:[2,101]},{8:[2,101],14:75,20:[2,101],21:[2,101],34:[2,101],38:[2,101],51:[1,61],63:[2,101],66:[2,101]},{5:[2,8],18:[2,8]},{8:[2,101],10:[2,101],14:76,25:[2,101],34:[2,101],39:[2,101],51:[1,61],52:[2,101],77:[2,101],87:[2,101],95:[2,101],96:[2,101],97:[2,101],98:[2,101],99:[2,101],100:[2,101],101:[2,101],102:[2,101],103:[2,101],105:[2,101]},{8:[2,30],10:[2,30],25:[2,30],34:[2,30],39:[2,30],51:[2,30],52:[2,30],77:[2,30],87:[2,30],95:[2,30],96:[2,30],97:[2,30],98:[2,30],99:[2,30],100:[2,30],101:[2,30],102:[2,30],103:[2,30],105:[2,30]},{10:[1,77]},{38:[1,78]},{8:[2,101],14:79,20:[2,101],21:[2,101],34:[2,101],38:[2,101],51:[1,61],63:[2,101],66:[2,101]},{5:[2,5],18:[2,5]},{5:[2,10],8:[2,10],10:[2,10],18:[2,10],20:[2,10],39:[2,10]},{29:[1,80]},{8:[1,39],10:[1,41],12:57,13:[1,85],25:[2,115],28:83,29:[2,115],33:[1,86],34:[1,59],36:56,39:[1,9],51:[1,87],52:[1,28],77:[1,38],83:53,84:54,85:55,86:82,87:[1,27],91:84,92:[1,88],93:52,94:81,95:[1,58],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{10:[1,41],84:89,96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37},{8:[2,117],10:[2,117],13:[2,117],25:[2,117],29:[2,117],33:[2,117],34:[2,117],39:[2,117],51:[2,117],52:[2,117],77:[2,117],87:[2,117],92:[2,117],95:[2,117],96:[2,117],97:[2,117],98:[2,117],99:[2,117],100:[2,117],101:[2,117],102:[2,117],103:[2,117],105:[2,117]},{8:[2,118],10:[2,118],13:[2,118],25:[2,118],29:[2,118],33:[2,118],34:[2,118],39:[2,118],51:[2,118],52:[2,118],77:[2,118],87:[2,118],92:[2,118],95:[2,118],96:[2,118],97:[2,118],98:[2,118],99:[2,118],100:[2,118],101:[2,118],102:[2,118],103:[2,118],105:[2,118]},{8:[2,119],10:[2,119],13:[2,119],25:[2,119],29:[2,119],33:[2,119],34:[2,119],39:[2,119],51:[2,119],52:[2,119],77:[2,119],87:[2,119],92:[2,119],95:[2,119],96:[2,119],97:[2,119],98:[2,119],99:[2,119],100:[2,119],101:[2,119],102:[2,119],103:[2,119],105:[2,119]},{8:[2,120],10:[2,120],13:[2,120],25:[2,120],29:[2,120],33:[2,120],34:[2,120],39:[2,120],51:[2,120],52:[2,120],77:[2,120],87:[2,120],92:[2,120],95:[2,120],96:[2,120],97:[2,120],98:[2,120],99:[2,120],100:[2,120],101:[2,120],102:[2,120],103:[2,120],105:[2,120]},{8:[2,121],10:[2,121],13:[2,121],25:[2,121],29:[2,121],33:[2,121],34:[2,121],39:[2,121],51:[2,121],52:[2,121],77:[2,121],87:[2,121],92:[2,121],95:[2,121],96:[2,121],97:[2,121],98:[2,121],99:[2,121],100:[2,121],101:[2,121],102:[2,121],103:[2,121],105:[2,121]},{8:[1,90]},{8:[1,96],15:91,20:[1,105],21:[1,108],34:[1,100],35:97,38:[1,106],44:92,48:93,54:94,56:95,57:99,58:101,59:102,60:103,61:104,63:[1,98],66:[1,107]},{8:[2,100],10:[2,100],13:[2,100],18:[2,100],20:[2,100],21:[2,100],25:[2,100],29:[2,100],33:[2,100],34:[2,100],38:[2,100],39:[2,100],52:[2,100],63:[2,100],66:[2,100],68:[2,100],71:[2,100],72:[2,100],73:[2,100],74:[2,100],75:[2,100],76:[2,100],77:[2,100],87:[2,100],95:[2,100],96:[2,100],97:[2,100],98:[2,100],99:[2,100],100:[2,100],101:[2,100],102:[2,100],103:[2,100],105:[2,100]},{18:[1,109]},{18:[2,18]},{5:[2,6],18:[2,6]},{16:[1,111],21:[1,112],26:110},{21:[1,113]},{25:[2,85]},{8:[2,101],10:[2,101],14:114,51:[1,61],52:[2,101],77:[2,101],87:[2,101],96:[2,101],97:[2,101],98:[2,101],99:[2,101],100:[2,101],101:[2,101],102:[2,101],103:[2,101],105:[2,101]},{25:[2,21]},{30:115,31:21,34:[1,23]},{8:[1,39],10:[1,41],25:[2,90],33:[2,90],52:[1,28],77:[1,38],79:117,81:22,82:116,83:24,84:25,85:26,87:[1,27],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{25:[2,24],33:[2,24]},{8:[2,91],10:[2,91],25:[2,91],33:[2,91],51:[2,91],52:[2,91],77:[2,91],87:[2,91],96:[2,91],97:[2,91],98:[2,91],99:[2,91],100:[2,91],101:[2,91],102:[2,91],103:[2,91],105:[2,91]},{8:[1,39],10:[1,41],12:57,28:118,34:[1,59],36:56,39:[1,9],52:[1,28],77:[1,38],83:53,84:54,85:55,87:[1,27],93:52,95:[1,58],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{8:[1,96],15:119,20:[1,105],21:[1,108],34:[1,100],35:97,38:[1,106],44:92,48:93,54:94,56:95,57:99,58:101,59:102,60:103,61:104,63:[1,98],66:[1,107]},{8:[1,39],10:[1,41],12:57,25:[2,110],28:121,34:[1,59],36:56,39:[1,9],41:120,52:[1,28],77:[1,38],83:53,84:54,85:55,87:[1,27],93:52,95:[1,58],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{8:[2,31],10:[2,31],25:[2,31],34:[2,31],39:[2,31],51:[2,31],52:[2,31],77:[2,31],87:[2,31],95:[2,31],96:[2,31],97:[2,31],98:[2,31],99:[2,31],100:[2,31],101:[2,31],102:[2,31],103:[2,31],105:[2,31]},{8:[1,47],10:[2,34],42:123,43:122},{8:[1,96],15:124,20:[1,105],21:[1,108],34:[1,100],35:97,38:[1,106],44:92,48:93,54:94,56:95,57:99,58:101,59:102,60:103,61:104,63:[1,98],66:[1,107]},{5:[2,17],8:[2,17],10:[2,17],18:[2,17],20:[2,17],39:[2,17]},{25:[2,111],29:[2,111]},{8:[1,39],10:[1,41],12:57,28:125,34:[1,59],36:56,39:[1,9],52:[1,28],77:[1,38],83:53,84:54,85:55,87:[1,27],93:52,95:[1,58],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{25:[2,113],29:[2,113]},{25:[2,114],29:[2,114]},{8:[2,101],10:[2,101],14:126,34:[2,101],39:[2,101],51:[1,61],52:[2,101],77:[2,101],87:[2,101],95:[2,101],96:[2,101],97:[2,101],98:[2,101],99:[2,101],100:[2,101],101:[2,101],102:[2,101],103:[2,101],105:[2,101]},{8:[2,101],10:[2,101],14:127,34:[2,101],39:[2,101],51:[1,61],52:[2,101],77:[2,101],87:[2,101],95:[2,101],96:[2,101],97:[2,101],98:[2,101],99:[2,101],100:[2,101],101:[2,101],102:[2,101],103:[2,101],105:[2,101]},{8:[2,96],10:[2,96],34:[2,96],39:[2,96],52:[2,96],77:[2,96],87:[2,96],95:[2,96],96:[2,96],97:[2,96],98:[2,96],99:[2,96],100:[2,96],101:[2,96],102:[2,96],103:[2,96],105:[2,96]},{14:128,25:[2,101],29:[2,101],51:[1,61]},{8:[2,116],10:[2,116],13:[2,116],25:[2,116],29:[2,116],33:[2,116],34:[2,116],39:[2,116],51:[2,116],52:[2,116],77:[2,116],87:[2,116],92:[2,116],95:[2,116],96:[2,116],97:[2,116],98:[2,116],99:[2,116],100:[2,116],101:[2,116],102:[2,116],103:[2,116],105:[2,116]},{8:[2,28],10:[2,28],13:[2,28],25:[2,28],29:[2,28],33:[2,28],34:[2,28],37:129,38:[1,130],39:[2,28],51:[2,28],52:[2,28],63:[2,28],77:[2,28],87:[2,28],92:[2,28],95:[2,28],96:[2,28],97:[2,28],98:[2,28],99:[2,28],100:[2,28],101:[2,28],102:[2,28],103:[2,28],105:[2,28]},{16:[1,131]},{16:[2,37],45:132,46:[1,133]},{16:[2,43],46:[2,43],49:134,50:135,51:[1,136],52:[1,137],53:[1,138]},{16:[2,49],20:[1,105],21:[1,108],38:[1,106],46:[2,49],51:[2,49],52:[2,49],53:[2,49],55:139,56:140,57:99,58:101,59:102,60:103,61:104,66:[1,107]},{16:[2,47],46:[2,47],51:[2,47],52:[2,47],53:[2,47]},{16:[2,59],20:[2,59],21:[2,59],38:[2,59],46:[2,59],51:[2,59],52:[2,59],53:[2,59],66:[2,59]},{16:[2,60],20:[2,60],21:[2,60],38:[2,60],46:[2,60],51:[2,60],52:[2,60],53:[2,60],66:[2,60]},{34:[1,59],36:141},{16:[2,49],20:[1,105],21:[1,108],38:[1,106],46:[2,49],51:[2,49],52:[2,49],53:[2,49],55:142,56:140,57:99,58:101,59:102,60:103,61:104,66:[1,107]},{8:[1,143]},{16:[2,51],20:[2,51],21:[2,51],38:[2,51],46:[2,51],51:[2,51],52:[2,51],53:[2,51],66:[2,51]},{16:[2,52],20:[2,52],21:[2,52],38:[2,52],46:[2,52],51:[2,52],52:[2,52],53:[2,52],66:[2,52]},{16:[2,53],20:[2,53],21:[2,53],38:[2,53],46:[2,53],51:[2,53],52:[2,53],53:[2,53],66:[2,53]},{16:[2,54],20:[2,54],21:[2,54],38:[2,54],46:[2,54],51:[2,54],52:[2,54],53:[2,54],66:[2,54]},{8:[1,96],34:[1,100],35:97,54:144,63:[1,98]},{8:[1,96],34:[1,100],35:97,54:145,63:[1,98]},{8:[2,101],14:146,34:[2,101],51:[1,61],63:[2,101]},{8:[1,148],10:[1,149],78:147},{5:[2,12],8:[2,12],10:[2,12],18:[2,12],20:[2,12],39:[2,12]},{5:[2,13],8:[2,13],10:[2,13],18:[2,13],20:[2,13],39:[2,13]},{8:[2,101],14:151,17:150,39:[2,101],51:[1,61]},{8:[1,39],10:[1,41],12:57,22:152,28:51,34:[1,59],36:56,39:[1,9],52:[1,28],77:[1,38],83:53,84:54,85:55,87:[1,27],93:52,95:[1,58],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{8:[1,39],10:[1,41],12:57,22:153,28:51,34:[1,59],36:56,39:[1,9],52:[1,28],77:[1,38],83:53,84:54,85:55,87:[1,27],93:52,95:[1,58],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{8:[1,39],10:[1,41],27:154,52:[1,28],77:[1,38],79:20,81:22,83:24,84:25,85:26,87:[1,27],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{25:[2,22]},{25:[2,88],33:[2,88]},{25:[2,89],33:[2,89]},{25:[1,155]},{16:[1,156]},{25:[1,157]},{25:[2,109]},{10:[2,32]},{10:[2,33]},{16:[1,158]},{25:[2,112],29:[2,112]},{8:[2,94],10:[2,94],34:[2,94],39:[2,94],52:[2,94],77:[2,94],87:[2,94],95:[2,94],96:[2,94],97:[2,94],98:[2,94],99:[2,94],100:[2,94],101:[2,94],102:[2,94],103:[2,94],105:[2,94]},{8:[2,95],10:[2,95],34:[2,95],39:[2,95],52:[2,95],77:[2,95],87:[2,95],95:[2,95],96:[2,95],97:[2,95],98:[2,95],99:[2,95],100:[2,95],101:[2,95],102:[2,95],103:[2,95],105:[2,95]},{25:[2,108],29:[2,108]},{8:[2,26],10:[2,26],13:[2,26],25:[2,26],29:[2,26],33:[2,26],34:[2,26],39:[2,26],51:[2,26],52:[2,26],63:[2,26],77:[2,26],87:[2,26],92:[2,26],95:[2,26],96:[2,26],97:[2,26],98:[2,26],99:[2,26],100:[2,26],101:[2,26],102:[2,26],103:[2,26],105:[2,26]},{8:[1,159]},{8:[2,101],14:151,17:160,39:[2,101],51:[1,61]},{16:[2,35]},{8:[2,101],14:161,20:[2,101],21:[2,101],34:[2,101],38:[2,101],51:[1,61],63:[2,101],66:[2,101]},{16:[2,40],46:[2,40]},{8:[1,96],20:[1,105],21:[1,108],34:[1,100],35:97,38:[1,106],44:162,48:93,54:94,56:95,57:99,58:101,59:102,60:103,61:104,63:[1,98],66:[1,107]},{8:[1,96],16:[2,39],20:[1,105],21:[1,108],34:[1,100],35:97,38:[1,106],44:164,46:[2,39],47:163,48:93,54:94,56:95,57:99,58:101,59:102,60:103,61:104,63:[1,98],66:[1,107]},{8:[2,101],14:165,20:[2,101],21:[2,101],34:[2,101],38:[2,101],51:[1,61],63:[2,101],66:[2,101]},{8:[2,101],14:166,20:[2,101],21:[2,101],34:[2,101],38:[2,101],51:[1,61],63:[2,101],66:[2,101]},{16:[2,46],46:[2,46],51:[2,46],52:[2,46],53:[2,46]},{16:[2,48],46:[2,48],51:[2,48],52:[2,48],53:[2,48]},{63:[1,167]},{16:[2,50],46:[2,50],51:[2,50],52:[2,50],53:[2,50]},{16:[2,25],20:[2,25],21:[2,25],38:[2,25],46:[2,25],51:[2,25],52:[2,25],53:[2,25],66:[2,25],68:[2,25],71:[2,25],72:[2,25],73:[2,25],74:[2,25],75:[2,25],76:[2,25]},{16:[2,58],20:[2,58],21:[2,58],38:[2,58],46:[2,58],51:[2,58],52:[2,58],53:[2,58],66:[2,58]},{16:[2,57],20:[2,57],21:[2,57],38:[2,57],46:[2,57],51:[2,57],52:[2,57],53:[2,57],66:[2,57]},{8:[1,169],34:[1,100],35:170,63:[1,171],64:168},{16:[2,82],20:[2,82],21:[2,82],38:[2,82],46:[2,82],51:[2,82],52:[2,82],53:[2,82],66:[2,82]},{16:[2,83],20:[2,83],21:[2,83],38:[2,83],46:[2,83],51:[2,83],52:[2,83],53:[2,83],66:[2,83]},{8:[2,101],14:172,51:[1,61]},{18:[1,173]},{8:[1,175],12:176,39:[1,9],88:174},{5:[2,16],8:[2,16],10:[2,16],18:[2,16],20:[2,16],39:[2,16]},{5:[2,14],8:[2,14],10:[2,14],18:[2,14],20:[2,14],39:[2,14]},{25:[2,86]},{8:[2,134],10:[2,134],13:[2,134],25:[2,134],29:[2,134],33:[2,134],34:[2,134],39:[2,134],51:[2,134],52:[2,134],77:[2,134],87:[2,134],92:[2,134],95:[2,134],96:[2,134],97:[2,134],98:[2,134],99:[2,134],100:[2,134],101:[2,134],102:[2,134],103:[2,134],105:[2,134]},{8:[2,101],14:151,17:177,39:[2,101],51:[1,61]},{8:[2,29],10:[2,29],13:[2,29],25:[2,29],29:[2,29],33:[2,29],34:[2,29],39:[2,29],51:[2,29],52:[2,29],77:[2,29],87:[2,29],92:[2,29],95:[2,29],96:[2,29],97:[2,29],98:[2,29],99:[2,29],100:[2,29],101:[2,29],102:[2,29],103:[2,29],105:[2,29]},{8:[2,101],14:151,17:178,39:[2,101],51:[1,61]},{8:[2,28],10:[2,28],13:[2,28],25:[2,28],29:[2,28],33:[2,28],34:[2,28],37:179,38:[1,130],39:[2,28],51:[2,28],52:[2,28],63:[2,28],77:[2,28],87:[2,28],92:[2,28],95:[2,28],96:[2,28],97:[2,28],98:[2,28],99:[2,28],100:[2,28],101:[2,28],102:[2,28],103:[2,28],105:[2,28]},{18:[1,180]},{8:[1,96],15:181,20:[1,105],21:[1,108],34:[1,100],35:97,38:[1,106],44:92,48:93,54:94,56:95,57:99,58:101,59:102,60:103,61:104,63:[1,98],66:[1,107]},{16:[2,41],46:[2,41]},{16:[2,42],46:[2,42]},{16:[2,38],46:[2,38]},{8:[2,44],20:[2,44],21:[2,44],34:[2,44],38:[2,44],63:[2,44],66:[2,44]},{8:[2,45],20:[2,45],21:[2,45],34:[2,45],38:[2,45],63:[2,45],66:[2,45]},{16:[2,61],20:[2,61],21:[2,61],38:[2,61],46:[2,61],51:[2,61],52:[2,61],53:[2,61],66:[2,61]},{67:182,68:[2,71],69:183,71:[1,184],72:[1,185],73:[1,186],74:[1,187],75:[1,188],76:[1,189]},{8:[2,101],14:190,34:[2,101],51:[1,61],63:[2,101],68:[2,101],71:[2,101],72:[2,101],73:[2,101],74:[2,101],75:[2,101],76:[2,101]},{68:[2,63],71:[2,63],72:[2,63],73:[2,63],74:[2,63],75:[2,63],76:[2,63]},{34:[1,59],36:191},{8:[1,192]},{5:[2,15],8:[2,15],10:[2,15],18:[2,15],20:[2,15],39:[2,15]},{18:[2,99]},{13:[2,101],14:193,21:[2,101],51:[1,61]},{29:[1,194]},{18:[1,195]},{18:[1,196]},{8:[2,27],10:[2,27],13:[2,27],25:[2,27],29:[2,27],33:[2,27],34:[2,27],39:[2,27],51:[2,27],52:[2,27],63:[2,27],77:[2,27],87:[2,27],92:[2,27],95:[2,27],96:[2,27],97:[2,27],98:[2,27],99:[2,27],100:[2,27],101:[2,27],102:[2,27],103:[2,27],105:[2,27]},{5:[2,11],8:[2,11],10:[2,11],18:[2,11],20:[2,11],39:[2,11]},{16:[2,36]},{68:[1,197]},{8:[2,101],14:198,34:[2,101],51:[1,61],63:[2,101],77:[2,101]},{8:[2,72],34:[2,72],51:[2,72],63:[2,72],77:[2,72]},{8:[2,73],34:[2,73],51:[2,73],63:[2,73],77:[2,73]},{8:[2,74],34:[2,74],51:[2,74],63:[2,74],77:[2,74]},{8:[2,75],34:[2,75],51:[2,75],63:[2,75],77:[2,75]},{8:[2,76],34:[2,76],51:[2,76],63:[2,76],77:[2,76]},{8:[2,77],34:[2,77],51:[2,77],63:[2,77],77:[2,77]},{8:[1,200],34:[1,100],35:201,63:[1,202],65:199,68:[2,68],71:[2,68],72:[2,68],73:[2,68],74:[2,68],75:[2,68],76:[2,68]},{63:[1,203]},{14:204,25:[2,101],51:[1,61]},{13:[1,207],21:[1,206],89:205},{8:[2,101],14:208,18:[2,101],39:[2,101],51:[1,61]},{4:209,5:[2,4],6:3,7:4,8:[1,5],10:[1,6],12:7,18:[2,4],19:8,20:[1,10],39:[1,9]},{5:[2,9],8:[2,9],10:[2,9],18:[2,9],20:[2,9],39:[2,9]},{16:[2,69],20:[2,69],21:[2,69],38:[2,69],46:[2,69],51:[2,69],52:[2,69],53:[2,69],66:[2,69]},{8:[1,211],34:[1,100],35:213,63:[1,214],70:210,77:[1,212]},{68:[2,62],71:[2,62],72:[2,62],73:[2,62],74:[2,62],75:[2,62],76:[2,62]},{68:[2,65],71:[2,65],72:[2,65],73:[2,65],74:[2,65],75:[2,65],76:[2,65]},{68:[2,66],71:[2,66],72:[2,66],73:[2,66],74:[2,66],75:[2,66],76:[2,66]},{34:[1,59],36:215},{68:[2,64],71:[2,64],72:[2,64],73:[2,64],74:[2,64],75:[2,64],76:[2,64]},{25:[1,216]},{18:[2,102]},{8:[2,101],10:[2,101],14:217,34:[2,101],39:[2,101],51:[1,61],52:[2,101],77:[2,101],87:[2,101],95:[2,101],96:[2,101],97:[2,101],98:[2,101],99:[2,101],100:[2,101],101:[2,101],102:[2,101],103:[2,101],105:[2,101]},{8:[2,101],14:218,20:[2,101],21:[2,101],34:[2,101],38:[2,101],51:[1,61],63:[2,101],66:[2,101]},{8:[1,175],12:176,18:[2,107],39:[1,9],88:220,90:219},{5:[2,7],18:[2,7]},{14:221,51:[1,61],68:[2,101]},{51:[2,78],68:[2,78]},{51:[2,79],68:[2,79]},{51:[2,80],68:[2,80]},{34:[1,59],36:222},{63:[1,223]},{16:[2,84],20:[2,84],21:[2,84],38:[2,84],46:[2,84],51:[2,84],52:[2,84],53:[2,84],66:[2,84]},{8:[1,39],10:[1,41],12:57,28:224,34:[1,59],36:56,39:[1,9],52:[1,28],77:[1,38],83:53,84:54,85:55,87:[1,27],93:52,95:[1,58],96:[1,29],97:[1,30],98:[1,31],99:[1,32],100:[1,33],101:[1,34],102:[1,35],103:[1,36],104:37,105:[1,40]},{8:[1,96],15:225,20:[1,105],21:[1,108],34:[1,100],35:97,38:[1,106],44:92,48:93,54:94,56:95,57:99,58:101,59:102,60:103,61:104,63:[1,98],66:[1,107]},{18:[2,103]},{18:[2,106]},{68:[2,70]},{63:[1,226]},{68:[2,67],71:[2,67],72:[2,67],73:[2,67],74:[2,67],75:[2,67],76:[2,67]},{29:[1,227]},{16:[1,228]},{51:[2,81],68:[2,81]},{8:[2,101],14:229,18:[2,101],39:[2,101],51:[1,61]},{8:[2,101],14:151,17:230,39:[2,101],51:[1,61]},{8:[1,175],12:176,18:[2,107],39:[1,9],88:220,90:231},{18:[1,232]},{18:[2,104]},{8:[2,101],14:233,18:[2,101],39:[2,101],51:[1,61]},{8:[1,175],12:176,18:[2,107],39:[1,9],88:220,90:234},{18:[2,105]}],
defaultActions: {11:[2,1],19:[2,19],63:[2,18],67:[2,85],69:[2,21],115:[2,22],121:[2,109],122:[2,32],123:[2,33],132:[2,35],154:[2,86],174:[2,99],181:[2,36],205:[2,102],219:[2,103],220:[2,106],221:[2,70],231:[2,104],234:[2,105]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};


function __() {
	var obj = arguments[0];
	for(var i=1; i<arguments.length; i++) {
		var arg = arguments[i];
		for(var e in arg) {
			obj[e] = arg[e];
		}
	}
	return obj;
}

function strip(str) {
	return str.substr(1, str.length-2);
}

function resolveValue(val, scope) {
	var type = typeof val;
	if(type === 'string') {
		return val;
	}
	else if(type === 'object') {
		if(val.isStr) {
			return val;
		}
		else if(val.isVar) {
			var node = scope;
			var names = val.varName;
			if(names.length === 1) {
				do {
					if(node[val.varName]) {
						return scope[val.varName];
					}
					node = node['^'];
				} while(node);
			}
			else {
				var candidate = undefined;
				var namesLen = names.length;

				// first, resolve the namespace address
				var name = names[namesLen-1];
				do {
					if(node[name]) {
						candidate = node[name];
						break;
					}
					node = node['^'];
				} while(node);

				// next, follow the variable down the scope tree
				for(i=namesLen-2; i>=0; i--) {
					if(typeof candidate === 'undefined') {
						return undefined;
					}
					candidate = candidate[names[i]];
				}

				// finally, return whatever we found
				return candidate;
			}
		}
		else if(val.isNsi) {
			console.log('# ',val);
			var names = val.varName;
			var nameLen = names.length;
			var node = resolveValue({
				isVar: true,
				varName: names[nameLen-1],
			}, scope);
			if(!node) return undefined;
			for(var i=nameLen-2; i>=0; i--) {
				var next = node[names[i]];
				if(!next) {
					return undefined;
				}
				node = next;
			}
			return node;
		}
		else if(val.join) {
			var expr = resolveExpr(val, scope);
			if(expr.isStr) return irks(expr.value);
			return expr.value;
		}
		else if(val.isCall) {
			var args = val.args;
			var isString = false;
			var expr = resolveExpr(args, scope);
			if(expr.isStr) expr = irks(expr.value);
			return val.method+expr+')';
		}
		else if(val.isBessCall) {
			return val;
		}
	}
	return undefined;
}

function irks(str) {
	return "'"
		+str
			.replace(/\\(.)/g, function(a,b){return b;})
			.replace(/'/g,"\\'")
		+"'";
}
function dirks(str) {
	return '"'
		+str
			.replace(/\\(.)/g, function(a,b){return b;})
			.replace(/"/g,'\\"')
		+'"';
}

function resolveVarName(name, scope) {
	var b = '';
	for(var i=decl.varName.length-1; i>=0; i--) {

	}
}

function resolveExpr(list, scope) {
	var b = [];
	var prevStr = true;
	var hasStr = false;

	// console.log(list);
	
	for(var i=list.length-1; i>=0; i--) {
		var value = resolveValue( list[i], scope );
		if(!value.isStr) {
			if(!prevStr) b.push(' ');
			prevStr = false;
		}
		else {
			value = value.value;
			prevStr = true;
			hasStr = true;
		}
		b.push(value);
	}
	
	return {
		isStr: hasStr,
		value: b.join(''),
	};
}

function expandDeclaration(decl, scope, jsol, sheet) {
	var name = decl.varName;
	if(decl.isAssignment) {
		var b = resolveExpr(decl.gets, scope).value;
		scope[name] = b;
		jsol[name] = b;
	}
	else if(decl.body) {
		var subScope = { '^': scope };
		var subJsol = {};
		var body = decl.body;
		var bodyLen = body.length;
		for(var i=bodyLen-1; i>=0; i--) {
			expandDeclaration( body[i], subScope, subJsol, sheet );
		}
		scope[name] = subScope;
		jsol[name] = subJsol;
	}
	else if(decl.isFunction) {
		console.log('### function: ',decl);
	}
	else if(decl.isValueFunction) {
		buildValueFunction(decl, scope, jsol);
	}
	else if(decl.isDictionary) {
		buildDictionary(decl, scope, jsol);
	}
	else if(decl.isRule) {
		var selectors = resolveSelectors(decl.selectors, scope, jsol);
		var rule = [];
		var styles = decl.css;
		for(var i=styles.length-1; i>=0; i--) {
			var style = styles[i];
			rule.push(style.prop+': '+resolveValue(style.value, scope)+';');
		}
		sheet.push(
			selectors+' {\n\t'+rule.join('\n\t')+'\n}\n'
		);
	}
}

function buildDictionary(decl, scope, jsol) {
	var b = resolveExpr(decl.bess.gets, scope).value;
	var name = decl.varName;
	if(!scope[name]) scope[name] = {};
	node = scope[name];

	var args = decl.arguments;
	for(var i=args.length-1; i>=0; i--) {
		var arg = args[i].join(' ');
		if(i===0) node[arg] = b;
		else {
			if(!node[arg]) node[arg] = {};
			node = node[arg];
		}
	}

	jsol[name] = scope[name];
}

function buildValueFunction(decl, scope, jsol) {
	var argLookup = {};
	var args = decl.arguments;
	var createFunc = [];
	for(var i=args.length-1; i>=0; i--) {
		var arg = args[i];
		argLookup[ arg.substr(1) ] = true;
		createFunc.push(arg);
	}

	var name = decl.varName;
	var gets = decl.gets;
	var b = [];

	var c = [];
	var prevStr = true;
	var hasStr = false;

	for(var i=gets.length-1; i>=0; i--) {
		var tmp = gets[i];
		// console.log('looking for: ',tmp);
		if(argLookup[tmp.varName] || tmp.isBessCall) {
			if(c.length) {
				b.push({
					isStr: true,
					value: c.join('')
				});
			}
			c.length = 0;
			b.push(tmp);
			prevStr = false;
		}
		else {
			var r = resolveValue(tmp, scope), value;
			if(!r.isStr) {
				if(!prevStr) c.push(' ');
				prevStr = false;
			}
			else {
				r = r.value;
				prevStr = true;
			}
			c.push(r);
		}
	}

	if(c.length) {
		b.push({
			isStr: true,
			value: c.join('')
		});
	}

	var retline = [];
	for(var i=0; i<b.length; i++) {
		var bi = b[i];
		if(bi.isStr) {
			retline.push(
				irks( bi.value )
			);
		}
		else if(bi.isVar) {
			retline.push(
				'$'+bi.varName
			);
		}
		else if(bi.isBessCall) {
			var bnode = resolveValue({
					isVar: true,
					varName: bi.method,
				}, scope);
			var bargs = bi.args;
			for(var j=bargs.length-1; j>=0; j--) {
				// grab the first element in the var name array
				var barg = bargs[j];
				if(argLookup[barg.varName]) {

				}
				// if(bnode.hasOwnProperty(bargName)) {
				// 	bnode = bnode[bargName];
				// }
			}
			// console.log('bnode: ',bnode);
			retline.push(
				'this('+JSOL.stringify(bi)+')' // TODO: replace with proper method call (inspect bi: {method, args} )
			);
		}
	}

	var body = 'return '+retline.join('+')+';';
	// console.log('**** => ',body);
	createFunc.push(body);
	jsol[name] = scope[name] = Function.apply(global, createFunc);
}

function resolveSelectorTarget(trgt, scope) {
	var val = trgt.value;
	var expr = resolveValue(val, scope);
	// console.log('** resolving selecor target: ',trgt,' => ',expr);
	if(trgt.isClassPrefix) {
		return '.'+expr;
	}
	else if(trgt.op) {
		return '['
			+trgt.of.nv+trgt.op
			+dirks(
				resolveValue(trgt.to, scope)
			)
			+']';
	}
}

function resolveSelectors(sels, scope, jsol) {
	var css = '';
	for(var i=sels.length-1; i>=0; i--) {
		var selector = sels[i];
		for(var j=selector.length-1; j>=0; j--) {
			var generation = selector[j];
			for(k=generation.length-1; k>=0; k--) {
				var chunk = generation[k];
				if(typeof chunk === 'string') {
					css += chunk;
				}
				else {
					css += resolveSelectorTarget(chunk, scope);
				}
				// else {
				// 	console.warn('unabled to resolve: ',chunk);
				// }
			}
		}
	}
	return css;
}

var JSOL={};
(function(){function l(b){return 10>b?"0"+b:b}function q(b){r.lastIndex=0;return r.test(b)?'"'+b.replace(r,function(b){var c=t[b];return"string"===typeof c?c:"\\u"+("0000"+b.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+b+'"'}function n(b,k){var c,d,h,p,g=e,f,a=k[b];a&&("object"===typeof a&&"function"===typeof a.toJSOL)&&(a=a.toJSOL(b));"function"===typeof j&&(a=j.call(k,b,a));switch(typeof a){case "string":return q(a);case "number":return isFinite(a)?String(a):"null";case "boolean":case "null":return String(a);case "object":if(!a)return"null";
e+=m;f=[];if("[object Array]"===Object.prototype.toString.apply(a)){p=a.length;for(c=0;c<p;c+=1)f[c]=n(c,a)||"null";h=0===f.length?"[]":e?"[\n"+e+f.join(",\n"+e)+"\n"+g+"]":"["+f.join(",")+"]";e=g;return h}if(j&&"object"===typeof j){p=j.length;for(c=0;c<p;c+=1)"string"===typeof j[c]&&(d=j[c],(h=n(d,a))&&f.push(q(d)+(e?": ":":")+h))}else for(d in a)Object.prototype.hasOwnProperty.call(a,d)&&(h=n(d,a))&&f.push(q(d)+(e?": ":":")+h);h=0===f.length?"{}":e?"{\n"+e+f.join(",\n"+e)+"\n"+g+"}":"{"+f.join(",")+
"}";e=g;return h;case "function":return a.toString().replace(/^function anonymous/,"function")}}"function"!==typeof Date.prototype.toJSOL&&(Date.prototype.toJSOL=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+l(this.getUTCMonth()+1)+"-"+l(this.getUTCDate())+"T"+l(this.getUTCHours())+":"+l(this.getUTCMinutes())+":"+l(this.getUTCSeconds())+"Z":null},String.prototype.toJSOL=Number.prototype.toJSOL=Boolean.prototype.toJSOL=function(){return this.valueOf()});var s=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
r=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,e,m,t={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},j;"function"!==typeof JSOL.stringify&&(JSOL.stringify=function(b,k,c){var d;m=e="";if("number"===typeof c)for(d=0;d<c;d+=1)m+=" ";else"string"===typeof c&&(m=c);if((j=k)&&"function"!==typeof k&&("object"!==typeof k||"number"!==typeof k.length))throw Error("JSOL.stringify");return n("",{"":b})});
"function"!==typeof JSOL.parse&&(JSOL.parse=function(b,e){function c(b,d){var g,f,a=b[d];if(a&&"object"===typeof a)for(g in a)Object.prototype.hasOwnProperty.call(a,g)&&(f=c(a,g),void 0!==f?a[g]=f:delete a[g]);return e.call(b,d,a)}var d;b=String(b);s.lastIndex=0;s.test(b)&&(b=b.replace(s,function(b){return"\\u"+("0000"+b.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(b.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return d=eval("("+b+")"),"function"===typeof e?c({"":d},""):d;throw new SyntaxError("JSOL.parse");})})();
/* Jison generated lexer */
var lexer = (function(){
var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    }});
lexer.options = {};
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0:/* ignore comments */
break;
case 1: 
break;
case 2: return 10; 
break;
case 3: return 8; 
break;
case 4:
		this.begin('bess');
		return yy_.yytext;
	
break;
case 5: this.begin('selector'); return yy_.yytext; 
break;
case 6: this.popState(); return yy_.yytext; 
break;
case 7: this.popState(); return yy_.yytext; 
break;
case 8: this.popState(); this.begin('css'); return yy_.yytext; 
break;
case 9: this.popState(); return yy_.yytext; 
break;
case 10: return 51; 
break;
case 11: return 'CDO'; 
break;
case 12: return 'CDC'; 
break;
case 13: return 75; 
break;
case 14: return 76; 
break;
case 15: return 71; 
break;
case 16: return 72; 
break;
case 17: return 73; 
break;
case 18: return 77; 
break;
case 19: return 'BAD_STRING'; 
break;
case 20: return 95; 
break;
case 21: return 10; 
break;
case 22: return 8; 
break;
case 23: return 'IMPORT_SYM'; 
break;
case 24: return 'PAGE_SYM'; 
break;
case 25: return 'MEDIA_SYM'; 
break;
case 26: return 'CHARSET_SYM'; 
break;
case 27: return 'ATKEYWORD'; 
break;
case 28: return 'NOT'; 
break;
case 29: return 'PLUS'; 
break;
case 30: return 'GREATER'; 
break;
case 31: return 46; 
break;
case 32: return 'TILDE'; 
break;
case 33: return 92; 
break;
case 34: return 99; 
break;
case 35: return 100; 
break;
case 36: return 98; 
break;
case 37: return 98; 
break;
case 38: return 98; 
break;
case 39: return 98; 
break;
case 40: return 98; 
break;
case 41: return 98; 
break;
case 42: return 101; 
break;
case 43: return 101; 
break;
case 44: return 101; 
break;
case 45: return 102; 
break;
case 46: return 102; 
break;
case 47: return 103; 
break;
case 48: return 103; 
break;
case 49: return 'DIMENSION'; 
break;
case 50: return 97; 
break;
case 51: return 96; 
break;
case 52: return 'INVALID'; 
break;
case 53: return yy_.yytext; 
break;
case 54: return 5; 
break;
}
};
lexer.rules = [/^(?:\/\*[^*]*\*+([^/*][^*]*\*+)*\/)/,/^(?:([ \t\r\n]+))/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*)\()/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?::)/,/^(?:\/)/,/^(?:\{)/,/^(?:;)/,/^(?:\{)/,/^(?:\})/,/^(?:([ \t\r\n]+))/,/^(?:<!--)/,/^(?:-->)/,/^(?:~=)/,/^(?:\|=)/,/^(?:\^=)/,/^(?:\$=)/,/^(?:\*=)/,/^(?:(("([^\n\r\\"]|\\(\n|\r\n|\r\b)|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*")|('([^\n\r\\']|\\(\n|\r\n|\r\b)|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*')))/,/^(?:(("([^\n\r\\"]|\\(\n|\r\n|\r\b)|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*\\?)|('([^\n\r\\']|\\(\n|\r\n|\r\b)|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*\\?)))/,/^(?:`([^`]*)`)/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*)\()/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?:([iI])([mM])([pP])([oO])([rR])([tT]))/,/^(?:([pP])([aA])([gG])([eE]))/,/^(?:([mM])([eE])([dD])([iI])([aA]))/,/^(?:@charset )/,/^(?:([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?::([nN])([oO])([tT])\()/,/^(?:(([ \t\r\n]+)?)\+)/,/^(?:(([ \t\r\n]+)?)>)/,/^(?:(([ \t\r\n]+)?),)/,/^(?:(([ \t\r\n]+)?)~)/,/^(?:!((([ \t\r\n]+)?)|(\/\*[^*]*\*+([^/*][^*]*\*+)*\/))*([iI])([mM])([pP])([oO])([rR])([tT])([aA])([nN])([tT]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([eE])([mM]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([eE])([xX]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([pP])([xX]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([cC])([mM]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([mM])([mM]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([iI])([nN]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([pP])([tT]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([pP])([cC]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([dD])([eE])([gG]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([rR])([aA])([dD]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([gG])([rR])([aA])([dD]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([mM])([sS]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([sS]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([hH])([zZ]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([kK])([hH])([zZ]))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)([-]?([_a-zA-Z]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))([_a-zA-Z0-9-]|([\240-\377])|((\\([0-9a-fA-F]){1,6}(\r\n|[ \t\r\n])?)|\\[^\r\n0-9a-fA-F]))*))/,/^(?:([0-9]+|[0-9]*\.[0-9]+)%)/,/^(?:([0-9]+|[0-9]*\.[0-9]+))/,/^(?:{invalid})/,/^(?:.)/,/^(?:$)/];
lexer.conditions = {"bess":{"rules":[0,1,6,7,18,19,21,22,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54],"inclusive":true},"selector":{"rules":[0,8,10,11,12,13,14,15,16,17,18,21,22,27,28,29,30,31,32,49,50,51,52,53,54],"inclusive":true},"css":{"rules":[0,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54],"inclusive":true},"INITIAL":{"rules":[0,1,2,3,4,5,53,54],"inclusive":true}};
return lexer;})()
parser.lexer = lexer;
function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    var source, cwd;
    if (typeof process !== 'undefined') {
        source = require('fs').readFileSync(require('path').resolve(args[1]), "utf8");
    } else {
        source = require("file").path(require("file").cwd()).join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}